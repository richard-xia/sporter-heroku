{"version":3,"sources":["components/groups/Group.module.css","components/games/Game.module.css","components/invites/InviteUser.module.css","components/invites/Invite.module.css","components/Dashboard.module.css","components/groups/GroupInfo.module.css","components/games/GameInfo.module.css","components/users/UserInfo.module.css","axios.js","components/auth/Login.js","components/auth/Register.js","screens/LandingPage.js","components/groups/Group.js","components/groups/GroupList.js","components/games/Game.js","components/games/GameList.js","components/maps/FindGroupMap.js","components/maps/FindGameMap.js","components/groups/CreateGroupForm.js","components/games/CreateGameForm.js","components/auth/Logout.js","components/users/UserRoleModal.js","components/users/User.js","components/Search.js","components/Header.js","components/Dashboard.js","components/requests/Request.js","components/requests/RequestList.js","components/users/UserList.js","components/maps/GroupMap.js","components/invites/InviteUser.js","components/invites/InviteUserList.js","components/groups/AdditionalSettingsModal.js","components/UploadImage.js","components/groups/GroupSettings.js","components/requests/RequestModal.js","components/groups/GroupInfo.js","components/invites/Invite.js","components/invites/InviteList.js","components/users/UserSettings.js","components/invites/InviteGroupModal.js","components/invites/InviteGameModal.js","components/users/UserInfo.js","components/games/teams/TeamModalUser.js","components/games/teams/TeamModalList.js","components/games/teams/TeamModal.js","components/games/teams/TeamList.js","components/maps/GameMap.js","components/games/SettingsModal.js","components/games/GameSettings.js","components/games/GameInfo.js","App.js","reportWebVitals.js","index.js","components/users/User.module.css","components/Search.module.css","components/requests/Request.module.css","components/Header.module.css","components/auth/Login.module.css"],"names":["module","exports","axios","interceptors","request","use","config","baseURL","token","localStorage","getItem","headers","common","Login","registerUser","useState","isLoggedIn","setIsLoggedIn","loginFailed","setLoginFailed","email","password","state","setState","handleChange","e","target","id","value","prevState","loginUser","loginData","post","then","response","data","setItem","catch","err","Card","className","classes","card","Form","Label","Alert","variant","onSubmit","Group","Control","placeholder","onChange","type","Button","button","onClick","to","Register","registerPassword","confirmPassword","name","emails","setEmails","error","setError","isRegistered","setIsRegistered","registerFailed","setRegisterFailed","useEffect","get","res","registerbutton","preventDefault","includes","registerData","split","LandingPage","register","setRegister","redirect","setRedirect","group","pathname","_id","Image","src","photo","groupIcon","groupName","GroupList","groups","ListGroup","style","width","maxHeight","map","Item","height","Game","game","gameIcon","gameTitle","title","GameList","games","FindGroupMap","props","handleClick","history","push","address","city","area","mapPosition","lat","center","lng","markerPosition","role","googleMapsApiKey","mapContainerStyle","zoom","this","otherGroupInfo","position","location","coordinates","maxWidth","float","groupId","draggable","defaultCenter","radius","Component","withRouter","FindGameMap","otherGameInfo","gameId","CreateGroupForm","showGroupModal","handleClose","description","setGroupId","submit","setSubmit","privateGroup","setPrivateGroup","competitiveGroup","setCompetitiveGroup","Modal","show","onHide","Header","closeButton","Title","Body","InputGroup","FormControl","Checkbox","checked","Append","Text","defaultChecked","Footer","groupData","private","competitive","console","log","CreateGameForm","showGameModal","setGameId","setGroups","selectedGroup","setSelectedGroup","openGame","setOpenGame","privateGame","setPrivateGame","competitiveGame","setCompetitiveGame","selectOpenGame","handleCompetitiveChange","marginBottom","textAlign","display","justifyContent","marginTop","backgroundColor","disabled","gameData","Logout","Nav","Link","as","removeItem","marginLeft","UserRoleModal","user","model","modelId","showUserRoleModal","canManageUsers","setCanManageUsers","canCreateGames","setCanCreateGames","canManageTeams","setCanManageTeams","canInviteUsers","setCanInviteUsers","handleChangeManageUsers","handleChangeInviteUsers","roles","put","User","removeUser","winner","setShowUserRoleModal","container","paddingTop","usericon","userName","stats","color","wins","losses","delete","roleicon","icon","faUserShield","deleteicon","faUserTimes","Search","groupUsers","otherGroupUsers","searchTerm","setSearchTerm","showSearch","setShowSearch","window","addEventListener","document","getElementById","contains","searchbar","event","mdbsearch","filter","toLowerCase","listgroup","setUser","setGames","setOtherGroupInfo","setOtherGameInfo","setGroupUsers","setOtherGroupUsers","searchData","findGroups","findGames","otherUsers","itema","itemb","Dropdown","itemc","Toggle","dropdowntoggle","Menu","dropdownmenu","Dashboard","currentGames","setCurrentGames","finishedGames","setFinishedGames","showGroups","setShowGroups","showGames","setShowGames","setShowGroupModal","setShowGameModal","setLocation","loading","setLoading","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","dashboardInfo","header","dashboardText","newbutton","Tabs","tabs","defaultActiveKey","Tab","eventKey","groupMapButton","itemf","google","gameMapButton","Request","requestType","typeId","deleteRequest","addUser","info","message","options","acceptIcon","faCheckCircle","requestId","denyIcon","faTimesCircle","RequestList","requests","UserList","users","Geocode","setApiKey","enableDebug","GroupMap","getCity","addressArray","i","length","types","long_name","getArea","j","getState","onInfoWindowClose","onMarkerDragEnd","newLat","latLng","newLng","fromLatLng","results","formatted_address","address_components","onLocationChange","onPlaceSelected","place","latValue","geometry","lngValue","changeGroupLocation","nextProps","nextState","AsyncMap","withScriptjs","withGoogleMap","defaultZoom","onDragEnd","paddingLeft","undefined","googleMapURL","loadingElement","containerElement","mapElement","InviteUser","modelType","removeInviteUser","addicon","faUserPlus","InviteUserList","GameSettings","showAdditionalSettingsModal","closeAdditionalSettingsModal","UploadImage","onUploadImage","uploadFileHandler","a","file","files","formData","FormData","append","imagePath","File","label","custom","GroupSettings","showGroupSettings","onGroupUpdate","setGroupName","groupDescription","setGroupDescription","groupPhoto","setGroupPhoto","setShowAdditionalSettingsModal","modalVisibility","setModalVisibility","contentVisibility","alt","image","Prepend","defaultValue","AdditionalSettingsModal","RequestModal","modalType","modalId","showRequestModal","closeRequestModal","makeRequest","setMessage","reqBody","setGroup","setPhoto","setUsers","inviteUsers","setInviteUsers","setRequests","setRole","canUserMakeRequest","setCanUserMakeRequest","isUserInGroup","setIsUserInGroup","setShowGroupSettings","setShowRequestModal","newInviteUsers","match","params","groupInfo","some","userGroups","locationInfo","menu","groupinfo","settings","borderRadius","faUsersCog","newUserList","newRequestList","requestUserId","gameText","gamesTab","Invite","invite","removeInvite","addModel","inviteId","InviteList","invites","UserSettings","showUserSettings","onUserUpdate","userDescription","setUserDescription","userPhoto","setUserPhoto","userData","InviteGroupModal","showInviteGroupModal","closeInviteGroupModal","otherUser","inviteGroups","setInviteGroups","invitedGroups","setInvitedGroups","inviteInfo","alreadyInvitedGroups","newInviteGroups","splice","indexOf","newInvitedGroups","InviteGameModal","showInviteGameModal","closeInviteGameModal","addGameInviteToUser","inviteGames","setInviteGames","invitedGames","setInvitedGames","selectedGame","setSelectedGame","alreadyInvitedGames","newInviteGames","newInvitedGames","groupInvites","setGroupInvites","gameInvites","setGameInvites","setShowUserSettings","setShowInviteGroupModal","setShowInviteGameModal","isCurrentUser","setIsCurrentUser","userInfo","newInviteList","userinfo","bio","editProfile","faUserCog","userGroupInvites","addGroupInviteToUser","groupInviteList","userGameInvites","gameInviteList","TeamModalUser","team","currentTeam","setTeam1Users","setTeam2Users","setNoTeamUsers","addUserToTeam","teamInfo","otherUsersTemp","team1","team2","removeUserFromTeam","changeUserTeam","TeamModalList","TeamModal","showModal","onTeamUpdate","team1Photo","setTeam1Photo","team2Photo","setTeam2Photo","team1Name","setTeam1Name","team2Name","setTeam2Name","handleTeamNameChange","aria-describedby","TeamList","team1Color","setTeam1Color","team2Color","setTeam2Color","team1WinnerText","setTeam1WinnerText","team2WinnerText","setTeam2WinnerText","showTeam1Modal","setShowTeam1Modal","showTeam2Modal","setShowTeam2Modal","padding","GameMap","changeGameLocation","onClose","margin","showSettingsModal","closeSettingsModal","shouldFinishGame","shouldDeleteGame","setGameWinner","finishGame","showGameSettings","onGameUpdate","setShowSettingsModal","setGameTitle","gameDescription","setGameDescription","gamePhoto","setGamePhoto","Date","time","setTime","setFinishGame","deleteGame","setDeleteGame","openAdditionalSettings","setting","maxDetail","SettingsModal","marginRight","setGame","setWinner","setTeam1","setTeam2","setOtherUsers","isUserInGame","setIsUserInGame","setShowGameSettings","gameInfo","newTime","require","moment","format","open","userGames","gameinfo","finished","teams","teamUsers","teamName","teamPhoto","App","Container","path","component","GroupInfo","GameInfo","UserInfo","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.b9647591.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"groupIcon\":\"Group_groupIcon__208ya\",\"groupName\":\"Group_groupName__Gndo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameIcon\":\"Game_gameIcon__1dzn9\",\"gameTitle\":\"Game_gameTitle__AJ2A-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addicon\":\"InviteUser_addicon__2EQ2L\",\"container\":\"InviteUser_container__1e2xB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"acceptIcon\":\"Invite_acceptIcon__g8Ydo\",\"denyIcon\":\"Invite_denyIcon__1_MNo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardText\":\"Dashboard_dashboardText__1IH5k\",\"newbutton\":\"Dashboard_newbutton__1WHyH\",\"tabs\":\"Dashboard_tabs__2ytzO\",\"header\":\"Dashboard_header__2IZLQ\",\"groups\":\"Dashboard_groups__1rodM\",\"games\":\"Dashboard_games__3I63r\",\"groupMapButton\":\"Dashboard_groupMapButton__REQ2R\",\"gameMapButton\":\"Dashboard_gameMapButton__1Psv9\",\"itemf\":\"Dashboard_itemf__3s5ML\",\"container\":\"Dashboard_container__1H0un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newbutton\":\"GroupInfo_newbutton__18s_i\",\"menu\":\"GroupInfo_menu__1FCL8\",\"users\":\"GroupInfo_users__3Olxn\",\"map\":\"GroupInfo_map__xMl5w\",\"games\":\"GroupInfo_games__1_s8i\",\"gameText\":\"GroupInfo_gameText__1VTqq\",\"gamesTab\":\"GroupInfo_gamesTab__FQQkW\",\"gamestext\":\"GroupInfo_gamestext__3lRzx\",\"header\":\"GroupInfo_header__3IOl-\",\"container\":\"GroupInfo_container__21o1l\",\"icon\":\"GroupInfo_icon__21FD4\",\"name\":\"GroupInfo_name__2kRoo\",\"settings\":\"GroupInfo_settings__3xMHh\",\"requestButton\":\"GroupInfo_requestButton__1dHVl\",\"groupinfo\":\"GroupInfo_groupinfo__oY_nd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newbutton\":\"GameInfo_newbutton__jArh4\",\"info\":\"GameInfo_info__2UWpq\",\"users\":\"GameInfo_users__1NFRh\",\"map\":\"GameInfo_map__tuqvs\",\"teams\":\"GameInfo_teams__19-yR\",\"header\":\"GameInfo_header__yU4qJ\",\"container\":\"GameInfo_container__3D5vi\",\"icon\":\"GameInfo_icon__1vS4E\",\"settings\":\"GameInfo_settings__xT8BY\",\"finished\":\"GameInfo_finished__19icD\",\"title\":\"GameInfo_title__18wAe\",\"group\":\"GameInfo_group__3Bbkj\",\"time\":\"GameInfo_time__3hKBF\",\"gameinfo\":\"GameInfo_gameinfo__3DIr0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"UserInfo_header__2j3TI\",\"userinfo\":\"UserInfo_userinfo__1YGhp\",\"groups\":\"UserInfo_groups__myxNO\",\"games\":\"UserInfo_games__2Zz_5\",\"userName\":\"UserInfo_userName__1RXIP\",\"bio\":\"UserInfo_bio__F2IMv\",\"info\":\"UserInfo_info__3ATfB\",\"userPhoto\":\"UserInfo_userPhoto__Bv9WJ\",\"editProfile\":\"UserInfo_editProfile__1F7rl\",\"container\":\"UserInfo_container__thGLO\"};","import axios from 'axios'\r\n\r\naxios.interceptors.request.use((config) => {\r\n  // config.baseURL = 'https://sporterapp.herokuapp.com'\r\n  config.baseURL = 'http://localhost:5000'\r\n  const token = localStorage.getItem('jwtToken')\r\n  config.headers.common['Authorization'] = `Bearer ${token}`\r\n  return config\r\n})\r\n\r\nexport const baseURL = 'http://localhost:5000'\r\n// export const baseURL = 'https://sporterapp.herokuapp.com'\r\n\r\nexport default axios\r\n","import React, { useState } from 'react'\r\nimport axios from '../../axios'\r\nimport { Redirect } from 'react-router'\r\nimport { Alert, Button, Card, Form } from 'react-bootstrap'\r\nimport classes from './Login.module.css'\r\n\r\n/*******************************************************************************\r\n * Login Component\r\n * Component for logging in users in the landing page\r\n *******************************************************************************/\r\n\r\nconst Login = ({ registerUser }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false) //If the user logs in redirect to dashboard\r\n  const [loginFailed, setLoginFailed] = useState(false) //If the user provides incorrect information send an alert\r\n\r\n  //Handles the state of email and password provided by the user\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n    setState((prevState) => ({ ...prevState, [id]: value }))\r\n  }\r\n\r\n  //Login function for when the user clicks 'login'\r\n  function loginUser() {\r\n    const loginData = {\r\n      email: state.email,\r\n      password: state.password,\r\n    }\r\n    axios\r\n      .post('/api/v1/auth/login', loginData)\r\n      .then((response) => {\r\n        const { token } = response.data\r\n        localStorage.setItem('jwtToken', token)\r\n        setIsLoggedIn(true)\r\n      })\r\n      .catch((err) => {\r\n        setLoginFailed(true)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        <Form.Label>Login</Form.Label>\r\n        {loginFailed ? (\r\n          <Alert variant={'danger'}>\r\n            Please enter a valid email and password\r\n          </Alert>\r\n        ) : null}\r\n        <Form onSubmit={loginUser}>\r\n          <Form.Group>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              placeholder='email'\r\n              onChange={handleChange}\r\n              id='email'\r\n              type='email'\r\n              value={state.email}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              onChange={handleChange}\r\n              id='password'\r\n              type='password'\r\n              value={state.password}\r\n              placeholder='password'\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n        <Button\r\n          className={classes.button}\r\n          onClick={loginUser}\r\n          variant='outline-secondary'\r\n        >\r\n          Login\r\n        </Button>\r\n        <p onClick={() => registerUser()}>Don't have an account? Sign up</p>\r\n      </Card>\r\n      {isLoggedIn ? <Redirect to='/dashboard' /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from '../../axios'\r\nimport { Redirect } from 'react-router'\r\nimport { Alert, Button, Card, Form } from 'react-bootstrap'\r\nimport classes from './Login.module.css'\r\n\r\n/*******************************************************************************\r\n * Register Component\r\n * Component for registering users in the landing page\r\n *******************************************************************************/\r\n\r\nconst Register = ({ loginUser }) => {\r\n  const [state, setState] = useState({\r\n    //Contains the register form data\r\n    email: '',\r\n    registerPassword: '',\r\n    confirmPassword: '',\r\n    name: '',\r\n  })\r\n\r\n  const [emails, setEmails] = useState([]) //Contains the email of every registered user (for checking if an account exists)\r\n  const [error, setError] = useState('') //Contains the error message if the user provides an incorrect field\r\n  const [isRegistered, setIsRegistered] = useState(false) //Redirect user if register is successful\r\n  const [registerFailed, setRegisterFailed] = useState(false) //Create an error message if register fails\r\n\r\n  //Get the emails of all users\r\n  useEffect(() => {\r\n    axios.get('/api/v1/users/allEmails').then((res) => {\r\n      setEmails(res.data.data)\r\n    })\r\n  }, [])\r\n\r\n  //Handle the state of register form data\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n    setState((prevState) => ({ ...prevState, [id]: value }))\r\n  }\r\n\r\n  //Handles the register button click\r\n  const registerUser = (e) => {\r\n    e.preventDefault()\r\n    if (emails.includes(state.email)) {\r\n      //Check if email address is being used\r\n      setError('This email address is already being used')\r\n      setRegisterFailed(true)\r\n    } else if (state.registerPassword !== state.confirmPassword) {\r\n      //Check if passwords match\r\n      setError('Passwords do not match')\r\n      setRegisterFailed(true)\r\n    } else {\r\n      const registerData = {\r\n        name: state.name,\r\n        email: state.email,\r\n        password: state.registerPassword,\r\n      }\r\n      axios\r\n        .post('/api/v1/auth/register', registerData)\r\n        .then((response) => {\r\n          //If successful, set the token and redirect the user\r\n          const { token } = response.data\r\n          localStorage.setItem('jwtToken', token)\r\n          setIsRegistered(true)\r\n        })\r\n        .catch((err) => {\r\n          //If failed, return the error response from the server\r\n          const error = err.response.data.error.split(':')[2]\r\n          setError(error)\r\n          setRegisterFailed(true)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.card}>\r\n        <Form.Label>Register</Form.Label>\r\n        {registerFailed ? <Alert variant={'danger'}>{error}</Alert> : null}\r\n        <Form>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            id='name'\r\n            type='text'\r\n            value={state.name}\r\n            placeholder='Name'\r\n          />\r\n          <br />\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            id='email'\r\n            type='email'\r\n            value={state.email}\r\n            placeholder='Email'\r\n          />\r\n          <br />\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            id='registerPassword'\r\n            type='password'\r\n            value={state.registerPassword}\r\n            placeholder='Password'\r\n          />\r\n          <br />\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            id='confirmPassword'\r\n            type='password'\r\n            value={state.confirmPassword}\r\n            placeholder='Confirm Password'\r\n          />\r\n        </Form>\r\n        <Button className={classes.registerbutton} onClick={registerUser}>\r\n          Register\r\n        </Button>\r\n        <p onClick={() => loginUser()}>Go back to login</p>\r\n      </Card>\r\n      {isRegistered ? <Redirect to='/dashboard' /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport Login from '../components/auth/Login'\r\nimport Register from '../components/auth/Register'\r\n\r\n/***********************************************************************************\r\n * Landing Page Component\r\n * First page loaded containing the Login and Register components\r\n **********************************************************************************/\r\n\r\nconst LandingPage = () => {\r\n  const [register, setRegister] = useState(false)\r\n  const [redirect, setRedirect] = useState(false)\r\n\r\n  function registerUser() {\r\n    setRegister(true)\r\n  }\r\n\r\n  function loginUser() {\r\n    setRegister(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('jwtToken')\r\n    if (token) {\r\n      setRedirect(true)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {register ? (\r\n        <div>\r\n          <Register loginUser={loginUser} />\r\n        </div>\r\n      ) : (\r\n        <Login registerUser={registerUser} />\r\n      )}\r\n      {redirect ? <Redirect to='/dashboard' /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LandingPage\r\n","import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Image } from 'react-bootstrap'\r\nimport classes from './Group.module.css'\r\nimport { baseURL } from '../../axios'\r\n\r\n/*******************************************************************************\r\n * Group Component\r\n * Displays the photo and name of a group with a link to the group provided\r\n *******************************************************************************/\r\n\r\nconst Group = ({ group }) => {\r\n  return (\r\n    <LinkContainer\r\n      to={{\r\n        pathname: `/api/v1/groups/${group._id}`,\r\n      }}\r\n    >\r\n      <div>\r\n        <Image\r\n          src={`${baseURL}/uploads/${group.photo}`}\r\n          className={classes.groupIcon}\r\n        />\r\n        <p className={classes.groupName}>{group.name}</p>\r\n      </div>\r\n    </LinkContainer>\r\n  )\r\n}\r\n\r\nexport default Group\r\n","import React from 'react'\r\nimport Group from './Group'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport { MDBContainer } from 'mdbreact'\r\nimport '../scrollbar.css'\r\n\r\n/*******************************************************************************\r\n * GroupList Component\r\n * Container for displaying the list of groups\r\n *******************************************************************************/\r\n\r\nfunction GroupList({ groups }) {\r\n  const scrollContainerStyle = { width: '470px', maxHeight: '200px' }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <ListGroup\r\n        className='scrollbar scrollbar-primary mx-auto'\r\n        style={scrollContainerStyle}\r\n      >\r\n        {groups.map((group) => (\r\n          <ListGroup.Item style={{ height: '65px' }} key={group._id}>\r\n            <Group group={group} />\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </MDBContainer>\r\n  )\r\n}\r\n\r\nexport default GroupList\r\n","import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Image } from 'react-bootstrap'\r\nimport classes from './Game.module.css'\r\nimport { baseURL } from '../../axios'\r\n\r\n/*******************************************************************************\r\n * Game Component\r\n * Container with the game photo, title and redirects to the game when clicked\r\n *******************************************************************************/\r\n\r\nconst Game = ({ game }) => {\r\n  return (\r\n    <div>\r\n      <LinkContainer\r\n        to={{\r\n          pathname: `/api/v1/games/${game._id}`,\r\n        }}\r\n      >\r\n        <div>\r\n          <Image\r\n            src={`${baseURL}/uploads/${game.photo}`}\r\n            className={classes.gameIcon}\r\n          />\r\n          <p className={classes.gameTitle}>{game.title}</p>\r\n        </div>\r\n      </LinkContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\r\nimport Game from './Game'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport { MDBContainer } from 'mdbreact'\r\nimport '../scrollbar.css'\r\n\r\n/*******************************************************************************\r\n * GameList Component\r\n * Container for displaying a list of games provided\r\n *******************************************************************************/\r\n\r\nfunction GameList({ games }) {\r\n  const scrollContainerStyle = { width: '470px', maxHeight: '200px' }\r\n  return (\r\n    <MDBContainer>\r\n      <ListGroup\r\n        className='scrollbar scrollbar-primary  mx-auto'\r\n        style={scrollContainerStyle}\r\n      >\r\n        {games.map((game) => (\r\n          <ListGroup.Item style={{ height: '65px' }} key={game._id}>\r\n            <Game game={game} />\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </MDBContainer>\r\n  )\r\n}\r\n\r\nexport default GameList\r\n","import React, { Component } from 'react'\r\nimport {\r\n  LoadScript,\r\n  GoogleMap,\r\n  InfoWindow,\r\n  Circle,\r\n} from '@react-google-maps/api'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Image } from 'react-bootstrap'\r\nimport { baseURL } from '../../axios'\r\n\r\n/*******************************************************************************\r\n * FindGroupMap Component\r\n * Map component that contains all groups which can be found by the user\r\n *******************************************************************************/\r\n\r\nclass FindGroupMap extends Component {\r\n  // Set the location of the map to the location provided\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      address: '',\r\n      city: '',\r\n      area: '',\r\n      state: '',\r\n      redirect: false,\r\n      mapPosition: {\r\n        lat: this.props.center.lat,\r\n        lng: this.props.center.lng,\r\n      },\r\n      markerPosition: {\r\n        lat: this.props.center.lat,\r\n        lng: this.props.center.lng,\r\n      },\r\n      role: [],\r\n    }\r\n  }\r\n\r\n  //Handles redirecting the user to the group selected\r\n  handleClick = (id) => {\r\n    this.props.history.push(`/api/v1/groups/${id}`)\r\n  }\r\n  render() {\r\n    return (\r\n      <LoadScript googleMapsApiKey={`AIzaSyBY-Mx2muSMsIf14UNilYTUo1MEkhpJPyY`}>\r\n        <GoogleMap\r\n          mapContainerStyle={{ width: '1100px', height: '400px' }}\r\n          zoom={this.props.zoom}\r\n          center={{\r\n            lat: this.state.mapPosition.lat,\r\n            lng: this.state.mapPosition.lng,\r\n          }}\r\n        >\r\n          {/* Map through the list of groups and display an InfoWindow for each group */}\r\n\r\n          {this.props.otherGroupInfo.map((group) => {\r\n            return (\r\n              <div key={group.groupId}>\r\n                <InfoWindow\r\n                  position={{\r\n                    lat: group.location.coordinates[0] + 0.0018,\r\n                    lng: group.location.coordinates[1],\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: '200px',\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      src={`${baseURL}/uploads/${group.photo}`}\r\n                      style={{\r\n                        maxWidth: '50px',\r\n                        maxHeight: '50px',\r\n                        float: 'left',\r\n                      }}\r\n                    />\r\n                    <span onClick={() => this.handleClick(group.groupId)}>\r\n                      {group.name}\r\n                    </span>\r\n                  </div>\r\n                </InfoWindow>\r\n                <Circle\r\n                  name={'Dolores park'}\r\n                  draggable={false}\r\n                  defaultCenter={{\r\n                    lat: group.location.coordinates[0],\r\n                    lng: group.location.coordinates[1],\r\n                  }}\r\n                  radius={500}\r\n                />\r\n              </div>\r\n            )\r\n          })}\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(FindGroupMap)\r\n","import React, { Component } from 'react'\r\nimport {\r\n  LoadScript,\r\n  GoogleMap,\r\n  InfoWindow,\r\n  Marker,\r\n} from '@react-google-maps/api'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Image } from 'react-bootstrap'\r\nimport { baseURL } from '../../axios'\r\n\r\n/*******************************************************************************\r\n * FindGameMap Component\r\n * Map component that contains all games which can be found by the user\r\n *******************************************************************************/\r\n\r\nclass FindGameMap extends Component {\r\n  // Set the location of the map to the location provided\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      redirect: false,\r\n      mapPosition: {\r\n        lat: this.props.center.lat,\r\n        lng: this.props.center.lng,\r\n      },\r\n      markerPosition: {\r\n        lat: this.props.center.lat,\r\n        lng: this.props.center.lng,\r\n      },\r\n      role: [],\r\n    }\r\n  }\r\n\r\n  //Handles redirecting the user to the game selected\r\n  handleClick = (id) => {\r\n    this.props.history.push(`/api/v1/games/${id}`)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <LoadScript googleMapsApiKey={`AIzaSyBY-Mx2muSMsIf14UNilYTUo1MEkhpJPyY`}>\r\n        <GoogleMap\r\n          mapContainerStyle={{ width: '1100px', height: '400px' }}\r\n          zoom={this.props.zoom}\r\n          center={{\r\n            lat: this.state.mapPosition.lat,\r\n            lng: this.state.mapPosition.lng,\r\n          }}\r\n        >\r\n          {/* Map through the list of games and display an InfoWindow for each game */}\r\n          {this.props.otherGameInfo.map((game) => {\r\n            return (\r\n              <div>\r\n                <InfoWindow\r\n                  position={{\r\n                    lat: game.location.coordinates[0] + 0.0018,\r\n                    lng: game.location.coordinates[1],\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: '200px',\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      src={`${baseURL}/uploads/${game.photo}`}\r\n                      style={{\r\n                        maxWidth: '50px',\r\n                        maxHeight: '50px',\r\n                        float: 'left',\r\n                      }}\r\n                    />\r\n                    <p onClick={() => this.handleClick(game.gameId)}>\r\n                      {game.title}\r\n                    </p>\r\n                  </div>\r\n                </InfoWindow>\r\n                <Marker\r\n                  draggable={false}\r\n                  position={{\r\n                    lat: game.location.coordinates[0],\r\n                    lng: game.location.coordinates[1],\r\n                  }}\r\n                />\r\n              </div>\r\n            )\r\n          })}\r\n          <></>\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(FindGameMap)\r\n","import React, { useState } from 'react'\r\nimport { Button, Modal, InputGroup, FormControl } from 'react-bootstrap'\r\nimport axios from '../../axios'\r\nimport { Redirect } from 'react-router'\r\n\r\n/*******************************************************************************\r\n * CreateGroupForm Component\r\n * Modal for creating a new game in the Dashboard component\r\n *******************************************************************************/\r\n\r\nfunction CreateGroupForm({ showGroupModal, handleClose }) {\r\n  //Contains the state of the name and description input\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    description: '',\r\n  })\r\n  const [groupId, setGroupId] = useState('') //The groupId of the created group for redirecting the user\r\n  const [submit, setSubmit] = useState(false) //Redirect the user when they submit the group form\r\n  const [privateGroup, setPrivateGroup] = useState(false) //State of whether the group is private\r\n  const [competitiveGroup, setCompetitiveGroup] = useState(true) //State of whether the group is competitive\r\n\r\n  //Handles changes to input of group name and description\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n    setState((prevState) => ({ ...prevState, [id]: value }))\r\n  }\r\n\r\n  //Handles changes to checkbox of private and competitive group\r\n  const handlePrivateChange = (e) => {\r\n    setPrivateGroup(e.target.checked)\r\n  }\r\n  const handleCompetitiveChange = (e) => {\r\n    setCompetitiveGroup(e.target.checked)\r\n  }\r\n\r\n  //Create group with the information in the form\r\n  const createGroup = () => {\r\n    const groupData = {\r\n      name: state.name,\r\n      description: state.description,\r\n      private: privateGroup,\r\n      competitive: competitiveGroup,\r\n    }\r\n    axios\r\n      .post('/api/v1/groups', groupData)\r\n      .then((res) => {\r\n        setGroupId(res.data.data.id)\r\n        setSubmit(true)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal show={showGroupModal} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Create new group</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* Modal body contains the name, description as well as private and competitive settings */}\r\n        <label>Group Name</label>\r\n        <InputGroup className='mb-3'>\r\n          <FormControl\r\n            onChange={handleChange}\r\n            id='name'\r\n            value={state.name}\r\n          ></FormControl>\r\n        </InputGroup>\r\n        <label>Group Description</label>\r\n        <InputGroup className='mb-3'>\r\n          <FormControl\r\n            onChange={handleChange}\r\n            id='description'\r\n            value={state.description}\r\n          ></FormControl>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroup.Checkbox onChange={handlePrivateChange} />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text>Private</InputGroup.Text>\r\n          </InputGroup.Append>\r\n          <InputGroup.Checkbox\r\n            defaultChecked={true}\r\n            onChange={handleCompetitiveChange}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text>Competitive</InputGroup.Text>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant='primary' onClick={createGroup}>\r\n          Create Group\r\n        </Button>\r\n      </Modal.Footer>\r\n      {submit ? <Redirect to={`/api/v1/groups/${groupId}`} /> : null}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CreateGroupForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Image, Modal, InputGroup, FormControl } from 'react-bootstrap'\r\nimport axios, { baseURL } from '../../axios'\r\nimport { Redirect } from 'react-router'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport { MDBContainer } from 'mdbreact'\r\nimport '../scrollbar.css'\r\n\r\n/*******************************************************************************\r\n * CreateGameForm Component\r\n * Modal for creating a new game in the Dashboard or GroupInfo Component\r\n *******************************************************************************/\r\n\r\nfunction CreateGameForm({ showGameModal, handleClose, group }) {\r\n  const scrollContainerStyle = {\r\n    width: '450px',\r\n    maxHeight: '200px',\r\n    marginTop: '10px',\r\n  }\r\n\r\n  //Contains the state of the name and description input\r\n  const [state, setState] = useState({\r\n    title: '',\r\n    description: '',\r\n  })\r\n  const [gameId, setGameId] = useState('') //The gameId of the created game for redirecting the user\r\n  const [submit, setSubmit] = useState(false) //Redirect the user when the game is created\r\n  const [groups, setGroups] = useState([]) //Contains a list of groups the user can select to create the game inside\r\n  const [selectedGroup, setSelectedGroup] = useState('') //Contains the id of the selected group\r\n  const [openGame, setOpenGame] = useState(false) //Select whether the game should be open or group game\r\n  const [privateGame, setPrivateGame] = useState(false) //Select whether the game should be private or public\r\n  const [competitiveGame, setCompetitiveGame] = useState(true) //Select whether the game should be competitive\r\n\r\n  //Get all groups where the user has permission to createGames\r\n  useEffect(() => {\r\n    axios.get('/api/v1/groups/createGames').then((res) => {\r\n      setGroups(res.data.data)\r\n    })\r\n    if (group) {\r\n      setSelectedGroup(group._id)\r\n    }\r\n  }, [group])\r\n\r\n  //Set the state of title and description\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n    setState((prevState) => ({ ...prevState, [id]: value }))\r\n  }\r\n\r\n  //Handle changes to open game, private and competitive options\r\n  const selectOpenGame = () => {\r\n    setOpenGame(!openGame)\r\n  }\r\n  const handlePrivateChange = (e) => {\r\n    setPrivateGame(e.target.checked)\r\n  }\r\n  const handleCompetitiveChange = (e) => {\r\n    setCompetitiveGame(e.target.checked)\r\n  }\r\n\r\n  //Create the game with the information provided by the user\r\n  const createGame = () => {\r\n    if (!openGame) {\r\n      const gameData = {\r\n        title: state.title,\r\n        description: state.description,\r\n        group: selectedGroup,\r\n        private: privateGame,\r\n        competitive: competitiveGame,\r\n      }\r\n      axios.post(`/api/v1/games/${selectedGroup}`, gameData).then((res) => {\r\n        setGameId(res.data.data._id)\r\n        setSubmit(true)\r\n      })\r\n    } else {\r\n      const gameData = {\r\n        title: state.title,\r\n        description: state.description,\r\n      }\r\n      axios.post(`/api/v1/games/open`, gameData).then((res) => {\r\n        setGameId(res.data.data._id)\r\n        setSubmit(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={showGameModal} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Create new game</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* Input for the game title */}\r\n        <label>Game Title</label>\r\n        <InputGroup className='mb-3'>\r\n          <FormControl\r\n            onChange={handleChange}\r\n            id='title'\r\n            value={state.title}\r\n          ></FormControl>\r\n        </InputGroup>\r\n        {/* Input for the game description */}\r\n        <label>Game Description</label>\r\n        <InputGroup className='mb-3'>\r\n          <FormControl\r\n            onChange={handleChange}\r\n            id='description'\r\n            value={state.description}\r\n          ></FormControl>\r\n        </InputGroup>\r\n        {/* Only display the current group if the user creates game inside the GroupInfo component */}\r\n        {group ? (\r\n          <div>\r\n            <label>Group: </label>\r\n            <ListGroup style={{ marginBottom: '10px' }}>\r\n              <ListGroup.Item>\r\n                <Image\r\n                  src={`${baseURL}/uploads/${group.photo}`}\r\n                  style={{\r\n                    maxHeight: '50px',\r\n                    maxWidth: '50px',\r\n                    float: 'left',\r\n                  }}\r\n                />\r\n                <p style={{ textAlign: 'center' }}>{group.name}</p>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            {/* Display a list of groups if the user creates game inside the Dashboard component */}\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <label>Group: </label>\r\n              {openGame ? (\r\n                <Button onClick={() => selectOpenGame()}>Group Game</Button>\r\n              ) : (\r\n                <Button onClick={() => selectOpenGame()}>Open Game</Button>\r\n              )}\r\n            </div>\r\n            {openGame ? null : (\r\n              <MDBContainer>\r\n                <ListGroup\r\n                  className='scrollbar scrollbar-primary mx-auto'\r\n                  style={scrollContainerStyle}\r\n                >\r\n                  {groups.map((group) =>\r\n                    selectedGroup === group._id ? (\r\n                      <ListGroup.Item\r\n                        style={{ backgroundColor: 'lightblue' }}\r\n                        onClick={() => setSelectedGroup(group._id)}\r\n                        key={group._id}\r\n                      >\r\n                        <Image\r\n                          src={`${baseURL}/uploads/${group.photo}`}\r\n                          style={{\r\n                            maxHeight: '50px',\r\n                            maxWidth: '50px',\r\n                            float: 'left',\r\n                          }}\r\n                        />\r\n                        <p style={{ textAlign: 'center' }}>{group.name}</p>\r\n                      </ListGroup.Item>\r\n                    ) : (\r\n                      <ListGroup.Item\r\n                        style={{ backgroundColor: 'white' }}\r\n                        onClick={() => setSelectedGroup(group._id)}\r\n                        key={group._id}\r\n                      >\r\n                        <Image\r\n                          src={`${baseURL}/uploads/${group.photo}`}\r\n                          style={{\r\n                            maxHeight: '50px',\r\n                            maxWidth: '50px',\r\n                            float: 'left',\r\n                          }}\r\n                        />\r\n                        <p style={{ textAlign: 'center' }}>{group.name}</p>\r\n                      </ListGroup.Item>\r\n                    )\r\n                  )}\r\n                </ListGroup>\r\n              </MDBContainer>\r\n            )}\r\n          </div>\r\n        )}\r\n        {/* Checkboxes for selecting private and competitive games */}\r\n        <InputGroup>\r\n          <InputGroup.Checkbox onChange={handlePrivateChange} />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text>Private</InputGroup.Text>\r\n          </InputGroup.Append>\r\n          {group ? (\r\n            <InputGroup.Checkbox\r\n              defaultChecked={false}\r\n              disabled={!group.competitive}\r\n              onChange={handleCompetitiveChange}\r\n            />\r\n          ) : (\r\n            <InputGroup.Checkbox\r\n              defaultChecked={true}\r\n              onChange={handleCompetitiveChange}\r\n            />\r\n          )}\r\n          <InputGroup.Append>\r\n            <InputGroup.Text>Competitive</InputGroup.Text>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant='primary' onClick={createGame}>\r\n          Create Game\r\n        </Button>\r\n      </Modal.Footer>\r\n      {submit ? <Redirect to={`/api/v1/games/${gameId}`} /> : null}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CreateGameForm\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\n\r\n/*******************************************************************************\r\n * Login Component\r\n * Header component found in the \"Account\" dropdown for logging out users\r\n *******************************************************************************/\r\n\r\nconst Logout = () => {\r\n  return (\r\n    <Nav.Link\r\n      id={'logout'}\r\n      as={Link}\r\n      onClick={() => localStorage.removeItem('jwtToken')}\r\n      style={{ marginLeft: '13px' }}\r\n      to={'/'}\r\n    >\r\n      Logout\r\n    </Nav.Link>\r\n  )\r\n}\r\n\r\nexport default Logout\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, InputGroup } from 'react-bootstrap'\r\nimport axios from '../../axios'\r\n\r\n/*****************************************************************************************\r\n * UserRoleModal Component\r\n * Modal component for changing the current role of the user inside GroupInfo and GameInfo\r\n *****************************************************************************************/\r\n\r\nfunction UserRoleModal({\r\n  user,\r\n  model,\r\n  modelId,\r\n  showUserRoleModal,\r\n  handleClose,\r\n}) {\r\n  //State of role options\r\n  const [canManageUsers, setCanManageUsers] = useState(false)\r\n  const [canCreateGames, setCanCreateGames] = useState(false)\r\n  const [canManageTeams, setCanManageTeams] = useState(false)\r\n  const [canInviteUsers, setCanInviteUsers] = useState(false)\r\n\r\n  //Handle changes to user role options\r\n  const handleChangeManageUsers = (e) => {\r\n    setCanManageUsers(e.target.checked)\r\n  }\r\n  const handleChangeCreateGames = (e) => {\r\n    setCanCreateGames(e.target.checked)\r\n  }\r\n  const handleChangeManageTeams = (e) => {\r\n    setCanManageTeams(e.target.checked)\r\n  }\r\n  const handleChangeInviteUsers = (e) => {\r\n    setCanInviteUsers(e.target.checked)\r\n  }\r\n\r\n  //Set the state of the current user's role\r\n  useEffect(() => {\r\n    if (user.role.includes('manageUsers')) {\r\n      setCanManageUsers(true)\r\n    }\r\n    if (user.role.includes('createGames')) {\r\n      setCanCreateGames(true)\r\n    }\r\n    if (user.role.includes('manageTeams')) {\r\n      setCanManageTeams(true)\r\n    }\r\n    if (user.role.includes('inviteUsers')) {\r\n      setCanInviteUsers(true)\r\n    }\r\n  }, [user.role])\r\n\r\n  //Handles changes to the user's role\r\n  function changeRoles() {\r\n    let roles = []\r\n    if (user.role.includes('creator')) {\r\n      roles.push('creator')\r\n    }\r\n    if (canManageUsers) {\r\n      roles.push('manageUsers')\r\n    }\r\n    if (canCreateGames) {\r\n      roles.push('createGames')\r\n    }\r\n    if (canManageTeams) {\r\n      roles.push('manageTeams')\r\n    }\r\n    if (canInviteUsers) {\r\n      roles.push('inviteUsers')\r\n    }\r\n    axios\r\n      .put(`/api/v1/${model}/${modelId}/users/${user._id}`, { role: roles })\r\n      .then((res) => {\r\n        handleClose()\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal show={showUserRoleModal} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{user.name}</Modal.Title>\r\n      </Modal.Header>\r\n      {/* Display role options for GroupInfo */}\r\n      {model === 'groups' ? (\r\n        <Modal.Body>\r\n          <InputGroup>\r\n            <InputGroup.Checkbox\r\n              defaultChecked={canManageUsers}\r\n              onChange={handleChangeManageUsers}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text>Manage Users</InputGroup.Text>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n          <InputGroup>\r\n            <InputGroup.Checkbox\r\n              defaultChecked={canCreateGames}\r\n              onChange={handleChangeCreateGames}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text>Create Games</InputGroup.Text>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n          <InputGroup>\r\n            <InputGroup.Checkbox\r\n              defaultChecked={canInviteUsers}\r\n              onChange={handleChangeInviteUsers}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text>Invite Users</InputGroup.Text>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </Modal.Body>\r\n      ) : null}\r\n      {/* Display role options for GameInfo */}\r\n      {model === 'games' ? (\r\n        <Modal.Body>\r\n          <InputGroup>\r\n            <InputGroup.Checkbox\r\n              defaultChecked={canManageUsers}\r\n              onChange={handleChangeManageUsers}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text>Manage Users</InputGroup.Text>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n          <InputGroup>\r\n            <InputGroup.Checkbox\r\n              defaultChecked={canManageTeams}\r\n              onChange={handleChangeManageTeams}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text>Manage Teams</InputGroup.Text>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n          <InputGroup>\r\n            <InputGroup.Checkbox\r\n              defaultChecked={canInviteUsers}\r\n              onChange={handleChangeInviteUsers}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text>Invite Users</InputGroup.Text>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </Modal.Body>\r\n      ) : null}\r\n      <Modal.Footer>\r\n        <Button variant='primary' onClick={changeRoles}>\r\n          Change Roles\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default UserRoleModal\r\n","import React, { useState } from 'react'\r\nimport axios, { baseURL } from '../../axios'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Image } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserTimes, faUserShield } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport UserRoleModal from './UserRoleModal'\r\nimport classes from './User.module.css'\r\n\r\n/*****************************************************************************************************\r\n * User Component\r\n * Component with the user information including role and delete buttons inside GroupInfo and GameInfo\r\n *****************************************************************************************************/\r\n\r\nconst User = ({\r\n  user,\r\n  model,\r\n  modelId,\r\n  removeUser,\r\n  role,\r\n  competitive,\r\n  winner,\r\n}) => {\r\n  //Handle state for showing modal to change the role of user\r\n  const [showUserRoleModal, setShowUserRoleModal] = useState(false)\r\n  const handleClose = () => {\r\n    setShowUserRoleModal(false)\r\n  }\r\n\r\n  //Delete user using delete icon\r\n  const deleteUser = () => {\r\n    axios\r\n      .delete(`/api/v1/${model}/${modelId}/users/${user._id}`)\r\n      .then((res) => {\r\n        removeUser(user._id)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.container}>\r\n        {/* Contains the user's photo and name and link to the user */}\r\n        <LinkContainer\r\n          to={{\r\n            pathname: `/api/v1/users/${user._id}`,\r\n          }}\r\n        >\r\n          {model === 'teams' ? (\r\n            <div>\r\n              <Image\r\n                style={{ maxHeight: '40px', maxWidth: '40px', float: 'left' }}\r\n                src={`${baseURL}/uploads/${user.photo}`}\r\n              />\r\n              <p style={{ paddingTop: '5px', marginBottom: '-5px' }}>\r\n                {user.name}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Image\r\n                src={`${baseURL}/uploads/${user.photo}`}\r\n                className={classes.usericon}\r\n              />\r\n              <div className={classes.user}>\r\n                <p className={classes.userName}>{user.name}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </LinkContainer>\r\n        {/* Display win/loss stats of user if component is GroupInfo */}\r\n        <div className={classes.stats}>\r\n          {model === 'groups' && competitive ? (\r\n            <div style={{ display: 'flex' }}>\r\n              <p style={{ color: 'green' }}>W:{user.wins}</p>\r\n              <p>&nbsp;</p>\r\n              <p style={{ color: 'red' }}> L:{user.losses}</p>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {/* Show delete and role button if user has manageUsers permission  */}\r\n        <div className={classes.delete}>\r\n          {role.includes('manageUsers') && !winner ? (\r\n            <div>\r\n              <FontAwesomeIcon\r\n                className={classes.roleicon}\r\n                icon={faUserShield}\r\n                onClick={() => setShowUserRoleModal(true)}\r\n              />\r\n              <UserRoleModal\r\n                user={user}\r\n                model={model}\r\n                modelId={modelId}\r\n                showUserRoleModal={showUserRoleModal}\r\n                handleClose={handleClose}\r\n              />\r\n              <FontAwesomeIcon\r\n                className={classes.deleteicon}\r\n                icon={faUserTimes}\r\n                onClick={deleteUser}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport { MDBContainer } from 'mdbreact'\r\nimport './scrollbar.css'\r\n\r\nimport Group from './groups/Group'\r\nimport Game from './games/Game'\r\nimport User from './users/User'\r\nimport classes from './Search.module.css'\r\n\r\n/***********************************************************************************\r\n * Search Component\r\n * Component in Header that contains search results of every group, game and user\r\n **********************************************************************************/\r\n\r\nconst Search = ({\r\n  groups,\r\n  games,\r\n  otherGroupInfo,\r\n  otherGameInfo,\r\n  groupUsers,\r\n  otherGroupUsers,\r\n}) => {\r\n  const scrollContainerStyle = { width: '470px', maxHeight: '200px' }\r\n  const [searchTerm, setSearchTerm] = useState('') //State of the current search input\r\n  const [showSearch, setShowSearch] = useState(false) //State of whether or not to show search bar\r\n\r\n  useEffect(() => {\r\n    if (showSearch) {\r\n      window.addEventListener('click', function (e) {\r\n        if (document.getElementById('clickbox')) {\r\n          if (!document.getElementById('clickbox').contains(e.target)) {\r\n            setShowSearch(false)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }, [showSearch])\r\n\r\n  return (\r\n    <div id='clickbox'>\r\n      <Form>\r\n        <Form.Control\r\n          type='text'\r\n          placeholder='search...'\r\n          className={classes.searchbar}\r\n          onChange={(event) => {\r\n            setSearchTerm(event.target.value)\r\n          }}\r\n          onClick={() => setShowSearch(true)}\r\n        />\r\n        {showSearch ? (\r\n          <MDBContainer className={classes.mdbsearch}>\r\n            <ListGroup\r\n              className='scrollbar scrollbar-primary mx-auto'\r\n              style={scrollContainerStyle}\r\n            >\r\n              {/* Filter and map search results for current user's groups */}\r\n              {groups\r\n                .filter((group) => {\r\n                  if (searchTerm === '') {\r\n                    return null\r\n                  } else if (\r\n                    group.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return group\r\n                  }\r\n                  return null\r\n                })\r\n                .map((group) => {\r\n                  if (showSearch) {\r\n                    return (\r\n                      <ListGroup.Item\r\n                        className={classes.listgroup}\r\n                        key={group._id}\r\n                        onClick={() => setShowSearch(false)}\r\n                      >\r\n                        <Group group={group} />\r\n                      </ListGroup.Item>\r\n                    )\r\n                  } else {\r\n                    return null\r\n                  }\r\n                })}\r\n              {/* Filter and map search results for current user's games */}\r\n              {games\r\n                .filter((game) => {\r\n                  if (searchTerm === '') {\r\n                    return null\r\n                  } else if (\r\n                    game.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return game\r\n                  }\r\n                  return null\r\n                })\r\n                .map((game) => {\r\n                  if (showSearch) {\r\n                    return (\r\n                      <ListGroup.Item\r\n                        className={classes.listgroup}\r\n                        key={game._id}\r\n                        onClick={() => setShowSearch(false)}\r\n                      >\r\n                        <Game game={game} />\r\n                      </ListGroup.Item>\r\n                    )\r\n                  } else {\r\n                    return null\r\n                  }\r\n                })}\r\n              {/* Filter and map search results for user's in current user's groups */}\r\n              {groupUsers\r\n                .filter((user) => {\r\n                  if (searchTerm === '') {\r\n                    return null\r\n                  } else if (\r\n                    user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return user\r\n                  }\r\n                  return null\r\n                })\r\n                .map((user) => {\r\n                  if (showSearch) {\r\n                    return (\r\n                      <ListGroup.Item\r\n                        className={classes.listgroup}\r\n                        key={user._id}\r\n                        onClick={() => setShowSearch(false)}\r\n                      >\r\n                        <User user={user} role={''} />\r\n                      </ListGroup.Item>\r\n                    )\r\n                  } else {\r\n                    return null\r\n                  }\r\n                })}\r\n              {/* Filter and map search results for groups the current user does not belong to */}\r\n              {otherGroupInfo\r\n                .filter((group) => {\r\n                  if (searchTerm === '') {\r\n                    return null\r\n                  } else if (\r\n                    group.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return group\r\n                  }\r\n                  return null\r\n                })\r\n                .map((group) => {\r\n                  if (showSearch) {\r\n                    return (\r\n                      <ListGroup.Item\r\n                        className={classes.listgroup}\r\n                        key={group._id}\r\n                        onClick={() => setShowSearch(false)}\r\n                      >\r\n                        <Group group={group} />\r\n                      </ListGroup.Item>\r\n                    )\r\n                  } else {\r\n                    return null\r\n                  }\r\n                })}\r\n              {/* Filter and map search results for games the current user does not belong to */}\r\n              {otherGameInfo\r\n                .filter((game) => {\r\n                  if (searchTerm === '') {\r\n                    return null\r\n                  } else if (\r\n                    game.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return game\r\n                  }\r\n                  return null\r\n                })\r\n                .map((game) => {\r\n                  if (showSearch) {\r\n                    return (\r\n                      <ListGroup.Item\r\n                        className={classes.listgroup}\r\n                        key={game._id}\r\n                        onClick={() => setShowSearch(false)}\r\n                      >\r\n                        <Game game={game} />\r\n                      </ListGroup.Item>\r\n                    )\r\n                  } else {\r\n                    return null\r\n                  }\r\n                })}\r\n\r\n              {/* Filter and map search results for users that do not belong in a same group as the current user */}\r\n              {otherGroupUsers\r\n                .filter((user) => {\r\n                  if (searchTerm === '') {\r\n                    return null\r\n                  } else if (\r\n                    user.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return user\r\n                  }\r\n                  return null\r\n                })\r\n                .map((user) => {\r\n                  if (showSearch) {\r\n                    return (\r\n                      <ListGroup.Item\r\n                        className={classes.listgroup}\r\n                        key={user._id}\r\n                        onClick={() => setShowSearch(false)}\r\n                      >\r\n                        <User user={user} role={''} />\r\n                      </ListGroup.Item>\r\n                    )\r\n                  } else {\r\n                    return null\r\n                  }\r\n                })}\r\n            </ListGroup>\r\n          </MDBContainer>\r\n        ) : null}\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from '../axios'\r\n\r\nimport Logout from './auth/Logout'\r\nimport Search from '../components/Search'\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav, Dropdown } from 'react-bootstrap'\r\nimport classes from './Header.module.css'\r\n\r\n/**********************************************************************************************\r\n * Header Component\r\n * Overhead component that redirects to Dashboard, Profile, Logout and contains the Search bar\r\n **********************************************************************************************/\r\n\r\nconst Header = () => {\r\n  //Current user's information\r\n  const [user, setUser] = useState({})\r\n  const [groups, setGroups] = useState([])\r\n  const [games, setGames] = useState([])\r\n\r\n  //Information of findGroups and findGames\r\n  const [otherGroupInfo, setOtherGroupInfo] = useState([])\r\n  const [otherGameInfo, setOtherGameInfo] = useState([])\r\n\r\n  //Contains list of all users inside the current user's groups\r\n  const [groupUsers, setGroupUsers] = useState([])\r\n  //Contains list of all users not inside the current user's groups\r\n  const [otherGroupUsers, setOtherGroupUsers] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/api/v1/users/getSearch')\r\n      .then((res) => {\r\n        console.log(res.data.data)\r\n        const searchData = res.data.data\r\n        setUser(searchData.user)\r\n        setGroups(searchData.user.groups)\r\n        setGames(searchData.user.games)\r\n        setOtherGroupInfo(searchData.findGroups)\r\n        setOtherGameInfo(searchData.findGames)\r\n        setGroupUsers(searchData.groupUsers)\r\n        setOtherGroupUsers(searchData.otherUsers)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Nav.Link\r\n        id={'dashboard'}\r\n        as={Link}\r\n        to={'/dashboard'}\r\n        className={classes.itema}\r\n      >\r\n        Dashboard\r\n      </Nav.Link>\r\n      <Search\r\n        className={classes.itemb}\r\n        groups={groups}\r\n        games={games}\r\n        otherGroupInfo={otherGroupInfo}\r\n        otherGameInfo={otherGameInfo}\r\n        groupUsers={groupUsers}\r\n        otherGroupUsers={otherGroupUsers}\r\n      />\r\n      <Dropdown className={classes.itemc}>\r\n        <Dropdown.Toggle className={classes.dropdowntoggle}>\r\n          Account\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu className={classes.dropdownmenu}>\r\n          <Dropdown.Item>\r\n            <Nav.Link\r\n              id={'profile'}\r\n              as={Link}\r\n              style={{ marginLeft: '15px' }}\r\n              to={`/api/v1/users/${user._id}`}\r\n            >\r\n              Profile\r\n            </Nav.Link>\r\n          </Dropdown.Item>\r\n          <Dropdown.Item>\r\n            <Logout />\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from '../axios'\r\nimport { Button, Card, Tabs, Tab } from 'react-bootstrap'\r\nimport classes from './Dashboard.module.css'\r\n\r\nimport GroupList from './groups/GroupList'\r\nimport GameList from './games/GameList'\r\nimport FindGroupMap from '../components/maps/FindGroupMap'\r\nimport FindGameMap from '../components/maps/FindGameMap'\r\nimport CreateGroupForm from '../components/groups/CreateGroupForm'\r\nimport CreateGameForm from '../components/games/CreateGameForm'\r\nimport Header from './Header'\r\n\r\n/**********************************************************************\r\n * Dashboard Component\r\n * Primary component for displaying the current user's groups and games\r\n **********************************************************************/\r\n\r\nconst Dashboard = (props) => {\r\n  //List of groups and games of the current user\r\n  const [groups, setGroups] = useState([])\r\n  const [games, setGames] = useState([])\r\n  //List of groups and games to find for the current user\r\n  const [otherGroupInfo, setOtherGroupInfo] = useState([])\r\n  const [otherGameInfo, setOtherGameInfo] = useState([])\r\n  //List of current games of the current user\r\n  const [currentGames, setCurrentGames] = useState([])\r\n  const [finishedGames, setFinishedGames] = useState([])\r\n\r\n  //State for showing modal of FindGroupMap and FindGameMap\r\n  const [showGroups, setShowGroups] = useState(false)\r\n  const [showGames, setShowGames] = useState(false)\r\n  //State for showing modal of CreateGroupForm and CreateGameForm\r\n  const [showGroupModal, setShowGroupModal] = useState(false)\r\n  const [showGameModal, setShowGameModal] = useState(false)\r\n\r\n  //Location for showing the FindGroupMap and FindGameMap\r\n  const [location, setLocation] = useState({ lat: 0, lng: 0 })\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  //Handles closing the CreateGroupForm and CreateGameForm\r\n  const handleClose = () => {\r\n    setShowGroupModal(false)\r\n    setShowGameModal(false)\r\n  }\r\n\r\n  //Get the information of the current user\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(function (position) {\r\n      setLocation({\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      })\r\n    })\r\n    axios\r\n      .get(`/api/v1/users/getDashboard`)\r\n      .then((res) => {\r\n        const dashboardInfo = res.data.data\r\n        setGroups(dashboardInfo.user.groups)\r\n        setGames(dashboardInfo.user.games)\r\n        setCurrentGames(dashboardInfo.currentGames)\r\n        setFinishedGames(dashboardInfo.finishedGames)\r\n        setOtherGroupInfo(dashboardInfo.findGroups)\r\n        setOtherGameInfo(dashboardInfo.findGames)\r\n        setLoading(false)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.header}>\r\n        <Header />\r\n      </div>\r\n      {/* Modal for creating group or creating game */}\r\n      <CreateGroupForm\r\n        showGroupModal={showGroupModal}\r\n        handleClose={handleClose}\r\n      />\r\n      <CreateGameForm showGameModal={showGameModal} handleClose={handleClose} />\r\n      {/* Display list of the user's groups */}\r\n      <Card className={classes.groups}>\r\n        <div style={{ display: 'inline' }}>\r\n          <p className={classes.dashboardText}>Groups</p>\r\n          <Button\r\n            variant='secondary'\r\n            className={classes.newbutton}\r\n            onClick={() => setShowGroupModal(true)}\r\n          >\r\n            {' '}\r\n            + Create New Group\r\n          </Button>\r\n        </div>\r\n        <GroupList groups={groups} />\r\n      </Card>\r\n      {/* Display list of the user's games */}\r\n      <Card className={classes.games}>\r\n        <div style={{ display: 'inline' }}>\r\n          <p className={classes.dashboardText}>Games</p>\r\n          <Button\r\n            variant='secondary'\r\n            className={classes.newbutton}\r\n            onClick={() => setShowGameModal(true)}\r\n          >\r\n            {' '}\r\n            + Start a new Game\r\n          </Button>\r\n        </div>\r\n        <Tabs className={classes.tabs} defaultActiveKey='games'>\r\n          <Tab eventKey='games' title='All Games'>\r\n            <GameList games={games} />\r\n          </Tab>\r\n          <Tab eventKey='currentGames' title='Current games'>\r\n            <GameList games={currentGames} />\r\n          </Tab>\r\n          <Tab eventKey='finishedGames' title='Finished games'>\r\n            <GameList games={finishedGames} />\r\n          </Tab>\r\n        </Tabs>\r\n      </Card>\r\n      {/* Button and map for 'Show Groups Near Me */}\r\n      <div className={classes.groupMapButton}>\r\n        <Button\r\n          variant='primary'\r\n          onClick={() => {\r\n            setShowGroups(true)\r\n            setShowGames(false)\r\n          }}\r\n        >\r\n          Show groups near me\r\n        </Button>\r\n      </div>\r\n      {showGroups ? (\r\n        <div className={classes.itemf}>\r\n          <FindGroupMap\r\n            google={props.google}\r\n            center={{\r\n              lat: location.lat,\r\n              lng: location.lng,\r\n            }}\r\n            height='300px'\r\n            zoom={15}\r\n            otherGroupInfo={otherGroupInfo}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {/* Button and map for 'Show Games Near Me */}\r\n      <Button\r\n        className={classes.gameMapButton}\r\n        onClick={() => {\r\n          setShowGroups(false)\r\n          setShowGames(true)\r\n        }}\r\n      >\r\n        Show games near me\r\n      </Button>\r\n      {showGames ? (\r\n        <div className={classes.itemf}>\r\n          <FindGameMap\r\n            google={props.google}\r\n            center={{\r\n              lat: location.lat,\r\n              lng: location.lng,\r\n            }}\r\n            height='300px'\r\n            zoom={15}\r\n            otherGameInfo={otherGameInfo}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport axios from '../../axios'\r\nimport classes from './Request.module.css'\r\nimport { Image } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { baseURL } from '../../axios'\r\n\r\n/*******************************************************************************\r\n * Request Component\r\n * Component for accepting or denying requests in GroupInfo and GameInfo\r\n *******************************************************************************/\r\n\r\nconst Request = ({ request, requestType, typeId, deleteRequest, addUser }) => {\r\n  //Accept request of the requestType (groups/games)\r\n  const acceptRequest = (requestId) => {\r\n    axios\r\n      .put(`/api/v1/${requestType}/${typeId}/request/${request._id}`)\r\n      .then((res) => {\r\n        deleteRequest(requestId)\r\n        addUser(res.data.data, request.user)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }\r\n\r\n  //Deny request of the requestType (groups/games)\r\n  const denyRequest = (requestId) => {\r\n    axios\r\n      .delete(`/api/v1/${requestType}/${typeId}/request/${request._id}`)\r\n      .then(() => {\r\n        deleteRequest(requestId)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }\r\n  return (\r\n    <div className={classes.container}>\r\n      {/* Display the user photo, name and request message */}\r\n      <div className={classes.info}>\r\n        <LinkContainer\r\n          to={{\r\n            pathname: `/api/v1/users/${request.user}`,\r\n          }}\r\n        >\r\n          <div>\r\n            <Image\r\n              className={classes.icon}\r\n              src={`${baseURL}/uploads/${request.photo}`}\r\n              style={{ maxHeight: '40px', maxWidth: '40px' }}\r\n            />\r\n            <p className={classes.name}>{request.name}</p>\r\n          </div>\r\n        </LinkContainer>\r\n        <p className={classes.message}>{request.message}</p>\r\n      </div>\r\n      <div className={classes.options}>\r\n        {/* Options of accepting and denying request */}\r\n        <FontAwesomeIcon\r\n          className={classes.acceptIcon}\r\n          icon={faCheckCircle}\r\n          onClick={() => acceptRequest(request._id)}\r\n        />\r\n        <FontAwesomeIcon\r\n          className={classes.denyIcon}\r\n          icon={faTimesCircle}\r\n          onClick={() => denyRequest(request._id)}\r\n        />\r\n        <br></br>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Request\r\n","import React from 'react'\r\nimport Request from './Request'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport { MDBContainer } from 'mdbreact'\r\nimport '../scrollbar.css'\r\n\r\n/*******************************************************************************\r\n * RequestList Component\r\n * Container component with the list of requests inside GroupInfo and GameInfo\r\n *******************************************************************************/\r\n\r\nfunction RequestList({\r\n  requests,\r\n  requestType,\r\n  typeId,\r\n  deleteRequest,\r\n  addUser,\r\n}) {\r\n  const scrollContainerStyle = { width: '470px', maxHeight: '200px' }\r\n  return (\r\n    <MDBContainer>\r\n      <ListGroup\r\n        className='scrollbar scrollbar-primary mx-auto'\r\n        style={scrollContainerStyle}\r\n      >\r\n        {requests.map((request) => (\r\n          <ListGroup.Item key={request._id}>\r\n            <Request\r\n              key={request._id}\r\n              request={request}\r\n              requestType={requestType}\r\n              typeId={typeId}\r\n              deleteRequest={deleteRequest}\r\n              addUser={addUser}\r\n            />\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </MDBContainer>\r\n  )\r\n}\r\n\r\nexport default RequestList\r\n","import React from 'react'\r\nimport User from './User'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport { MDBContainer } from 'mdbreact'\r\nimport '../scrollbar.css'\r\n\r\n/*************************************************************************\r\n * UserList Component\r\n * Container component with a list of users inside GroupInfo and GameInfo\r\n *************************************************************************/\r\n\r\nfunction UserList({\r\n  users,\r\n  model,\r\n  modelId,\r\n  removeUser,\r\n  role,\r\n  competitive,\r\n  winner,\r\n}) {\r\n  const scrollContainerStyle = { width: '470px', maxHeight: '200px' }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <ListGroup\r\n        className='scrollbar scrollbar-primary mx-auto'\r\n        style={scrollContainerStyle}\r\n      >\r\n        {users.map((user) => (\r\n          <ListGroup.Item key={user._id}>\r\n            <User\r\n              user={user}\r\n              model={model}\r\n              modelId={modelId}\r\n              removeUser={removeUser}\r\n              role={role}\r\n              competitive={competitive}\r\n              winner={winner}\r\n            />\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </MDBContainer>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","import React, { Component } from 'react'\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Circle,\r\n} from 'react-google-maps'\r\nimport Geocode from 'react-geocode'\r\nimport Autocomplete from 'react-google-autocomplete'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nGeocode.setApiKey('AIzaSyBY-Mx2muSMsIf14UNilYTUo1MEkhpJPyY')\r\nGeocode.enableDebug()\r\n\r\nclass GroupMap extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      address: '',\r\n      city: '',\r\n      area: '',\r\n      state: '',\r\n      mapPosition: {\r\n        lat: this.props.center.lat,\r\n        lng: this.props.center.lng,\r\n      },\r\n      markerPosition: {\r\n        lat: this.props.center.lat,\r\n        lng: this.props.center.lng,\r\n      },\r\n      role: [],\r\n      changeGroupLocation: false,\r\n    }\r\n  }\r\n  /**\r\n   * Get the current address from the default map position and set those values in the state\r\n   */\r\n  componentDidMount() {\r\n    this.setState({ role: this.props.role })\r\n    Geocode.fromLatLng(\r\n      this.state.mapPosition.lat,\r\n      this.state.mapPosition.lng\r\n    ).then(\r\n      (response) => {\r\n        const address = response.results[0].formatted_address,\r\n          addressArray = response.results[0].address_components,\r\n          city = this.getCity(addressArray),\r\n          area = this.getArea(addressArray),\r\n          state = this.getState(addressArray)\r\n        this.setState({\r\n          address: address ? address : '',\r\n          area: area ? area : '',\r\n          city: city ? city : '',\r\n          state: state ? state : '',\r\n        })\r\n      },\r\n      (error) => {\r\n        console.error(error)\r\n      }\r\n    )\r\n  }\r\n  /**\r\n   * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\r\n   */\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      this.state.markerPosition.lat !== this.props.center.lat ||\r\n      this.state.address !== nextState.address ||\r\n      this.state.city !== nextState.city ||\r\n      this.state.area !== nextState.area ||\r\n      this.state.changeGroupLocation !== nextState.changeGroupLocation ||\r\n      this.state.state !== nextState.state\r\n    ) {\r\n      return true\r\n    } else if (this.props.center.lat === nextProps.center.lat) {\r\n      return false\r\n    }\r\n  }\r\n  /**\r\n   * Get the city and set the city input value to the one selected\r\n   */\r\n  getCity = (addressArray) => {\r\n    let city = ''\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n      if (\r\n        addressArray[i].types[0] &&\r\n        'administrative_area_level_2' === addressArray[i].types[0]\r\n      ) {\r\n        city = addressArray[i].long_name\r\n        return city\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Get the area and set the area input value to the one selected\r\n   */\r\n  getArea = (addressArray) => {\r\n    let area = ''\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n      if (addressArray[i].types[0]) {\r\n        for (let j = 0; j < addressArray[i].types.length; j++) {\r\n          if (\r\n            'sublocality_level_1' === addressArray[i].types[j] ||\r\n            'locality' === addressArray[i].types[j]\r\n          ) {\r\n            area = addressArray[i].long_name\r\n            return area\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Get the address and set the address input value to the one selected\r\n   */\r\n  getState = (addressArray) => {\r\n    let state = ''\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n      for (let i = 0; i < addressArray.length; i++) {\r\n        if (\r\n          addressArray[i].types[0] &&\r\n          'administrative_area_level_1' === addressArray[i].types[0]\r\n        ) {\r\n          state = addressArray[i].long_name\r\n          return state\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * And function for city,state and address input\r\n   */\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value })\r\n  }\r\n  /**\r\n   * This Event triggers when the marker window is closed\r\n   */\r\n  onInfoWindowClose = (event) => {}\r\n\r\n  /**\r\n   * When the marker is dragged you get the lat and long using the functions available from event object.\r\n   * Use geocode to get the address, city, area and state from the lat and lng positions.\r\n   * And then set those values in the state.\r\n   */\r\n  onMarkerDragEnd = (event) => {\r\n    let newLat = event.latLng.lat(),\r\n      newLng = event.latLng.lng()\r\n\r\n    Geocode.fromLatLng(newLat, newLng).then(\r\n      (response) => {\r\n        const address = response.results[0].formatted_address,\r\n          addressArray = response.results[0].address_components,\r\n          city = this.getCity(addressArray),\r\n          area = this.getArea(addressArray),\r\n          state = this.getState(addressArray)\r\n        this.setState({\r\n          address: address ? address : '',\r\n          area: area ? area : '',\r\n          city: city ? city : '',\r\n          state: state ? state : '',\r\n          markerPosition: {\r\n            lat: newLat,\r\n            lng: newLng,\r\n          },\r\n          mapPosition: {\r\n            lat: newLat,\r\n            lng: newLng,\r\n          },\r\n        })\r\n        this.props.onLocationChange(newLat, newLng)\r\n      },\r\n      (error) => {\r\n        console.error(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * When the user types an address in the search box\r\n   */\r\n  onPlaceSelected = (place) => {\r\n    const address = place.formatted_address,\r\n      addressArray = place.address_components,\r\n      city = this.getCity(addressArray),\r\n      area = this.getArea(addressArray),\r\n      state = this.getState(addressArray),\r\n      latValue = place.geometry.location.lat(),\r\n      lngValue = place.geometry.location.lng()\r\n    // Set these values in the state.\r\n    this.setState({\r\n      address: address ? address : '',\r\n      area: area ? area : '',\r\n      city: city ? city : '',\r\n      state: state ? state : '',\r\n      markerPosition: {\r\n        lat: latValue,\r\n        lng: lngValue,\r\n      },\r\n      mapPosition: {\r\n        lat: latValue,\r\n        lng: lngValue,\r\n      },\r\n    })\r\n    this.props.onLocationChange(latValue, lngValue)\r\n  }\r\n\r\n  render() {\r\n    const AsyncMap = withScriptjs(\r\n      withGoogleMap((props) => (\r\n        <GoogleMap\r\n          google={this.props.google}\r\n          defaultZoom={this.props.zoom}\r\n          defaultCenter={{\r\n            lat: this.state.mapPosition.lat,\r\n            lng: this.state.mapPosition.lng,\r\n          }}\r\n        >\r\n          {/*Circle*/}\r\n          {this.state.role.includes('creator') ? (\r\n            <Circle\r\n              google={this.props.google}\r\n              name={'Dolores park'}\r\n              draggable={true}\r\n              onDragEnd={this.onMarkerDragEnd}\r\n              defaultCenter={{\r\n                lat: this.state.markerPosition.lat,\r\n                lng: this.state.markerPosition.lng,\r\n              }}\r\n              radius={500}\r\n            />\r\n          ) : (\r\n            <Circle\r\n              google={this.props.google}\r\n              name={'Dolores park'}\r\n              draggable={false}\r\n              defaultCenter={{\r\n                lat: this.state.markerPosition.lat,\r\n                lng: this.state.markerPosition.lng,\r\n              }}\r\n              radius={500}\r\n            />\r\n          )}\r\n          {/* For Auto complete Search Box */}\r\n          {this.state.changeGroupLocation ? (\r\n            <div>\r\n              <Autocomplete\r\n                style={{\r\n                  width: '100%',\r\n                  height: '40px',\r\n                  paddingLeft: '16px',\r\n                  marginTop: '2px',\r\n                }}\r\n                onPlaceSelected={this.onPlaceSelected}\r\n                types={'(street_address)'}\r\n              />\r\n              <Button\r\n                onClick={() => this.setState({ changeGroupLocation: false })}\r\n                style={{ marginTop: '2px' }}\r\n              >\r\n                Finished Changing Location\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          {!this.state.changeGroupLocation &&\r\n          this.state.role.includes('creator') ? (\r\n            <Button\r\n              onClick={() => this.setState({ changeGroupLocation: true })}\r\n            >\r\n              Change Group Location\r\n            </Button>\r\n          ) : null}\r\n        </GoogleMap>\r\n      ))\r\n    )\r\n    let map\r\n    if (this.props.center.lat !== undefined) {\r\n      map = (\r\n        <div>\r\n          <AsyncMap\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyBY-Mx2muSMsIf14UNilYTUo1MEkhpJPyY&libraries=places`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: this.props.height }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n          />\r\n        </div>\r\n      )\r\n    } else {\r\n      map = <div style={{ height: this.props.height }} />\r\n    }\r\n    return map\r\n  }\r\n}\r\nexport default GroupMap\r\n","import React from 'react'\r\nimport axios from '../../axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport classes from './InviteUser.module.css'\r\n\r\n/*******************************************************************************\r\n * InviteUser Component\r\n * Component that allows the user to send an invite inside GroupInfo and GameInfo\r\n *******************************************************************************/\r\n\r\nconst InviteUser = ({ user, modelType, modelId, removeInviteUser }) => {\r\n  const sendInvite = () => {\r\n    axios\r\n      .post(`/api/v1/${modelType}/${modelId}/invite/${user._id}`)\r\n      .then((res) => {\r\n        removeInviteUser(user._id)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <p>{user.name}</p>\r\n      <FontAwesomeIcon\r\n        className={classes.addicon}\r\n        icon={faUserPlus}\r\n        onClick={() => sendInvite()}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InviteUser\r\n","import React from 'react'\r\nimport InviteUser from './InviteUser'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport { MDBContainer } from 'mdbreact'\r\nimport '../scrollbar.css'\r\n\r\n/*******************************************************************************\r\n * InviteUserList Component\r\n * Container for list of users to send an invite inside GroupInfo and GameInfo\r\n *******************************************************************************/\r\n\r\nfunction InviteUserList({ users, modelType, modelId, removeInviteUser }) {\r\n  const scrollContainerStyle = { width: '470px', maxHeight: '200px' }\r\n  return (\r\n    <MDBContainer>\r\n      <ListGroup\r\n        className='scrollbar scrollbar-primary mx-auto'\r\n        style={scrollContainerStyle}\r\n      >\r\n        {users.map((user) => (\r\n          <ListGroup.Item key={user._id}>\r\n            <InviteUser\r\n              key={user._id}\r\n              user={user}\r\n              modelType={modelType}\r\n              modelId={modelId}\r\n              removeInviteUser={removeInviteUser}\r\n            />\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </MDBContainer>\r\n  )\r\n}\r\n\r\nexport default InviteUserList\r\n","import React, { useState } from 'react'\r\nimport axios from '../../axios'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n/****************************************************************************************\r\n * GameSettings Component\r\n * Additional settings modal component for selecting winner and confirming to delete game\r\n ****************************************************************************************/\r\n\r\nfunction GameSettings({\r\n  group,\r\n  showAdditionalSettingsModal,\r\n  closeAdditionalSettingsModal,\r\n}) {\r\n  const [redirect, setRedirect] = useState(false) //Redirect user to dashboard if game is deleted\r\n\r\n  //Delete the group when user clicks on 'Delete Group' button and confirms\r\n  function deleteGroup() {\r\n    axios\r\n      .delete(`/api/v1/groups/${group._id}`)\r\n      .then((res) => {\r\n        setRedirect(true)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={showAdditionalSettingsModal}\r\n      onHide={closeAdditionalSettingsModal}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Settings</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* Modal body confirming if user wants to delete group */}\r\n        <div>\r\n          <Modal.Title>Are you sure you want to delete this group?</Modal.Title>\r\n          <br />\r\n          <Button\r\n            style={{ marginLeft: '120px' }}\r\n            variant='danger'\r\n            onClick={deleteGroup}\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button\r\n            style={{ marginLeft: '50px' }}\r\n            variant='info'\r\n            onClick={closeAdditionalSettingsModal}\r\n          >\r\n            No\r\n          </Button>\r\n        </div>\r\n      </Modal.Body>\r\n      {redirect ? <Redirect to='/dashboard' /> : null}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default GameSettings\r\n","import React from 'react'\r\nimport axios from '../axios'\r\nimport { Form } from 'react-bootstrap'\r\n/***********************************************************************************\r\n * UploadImage Component\r\n * Component for changing the picture of the Group, Game, Team or User\r\n **********************************************************************************/\r\n\r\nconst UploadImage = ({ onUploadImage }) => {\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }\r\n    const { data } = await axios.post('/api/v1/upload', formData, config)\r\n    const imagePath = data.split('\\\\')[2]\r\n    console.log(imagePath)\r\n    onUploadImage(imagePath)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form.File\r\n        id='image-file'\r\n        label='Choose File'\r\n        custom\r\n        onChange={uploadFileHandler}\r\n      ></Form.File>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UploadImage\r\n","import React, { useState } from 'react'\r\nimport axios, { baseURL } from '../../axios'\r\nimport { Button, Image, Modal, InputGroup, FormControl } from 'react-bootstrap'\r\n\r\nimport AdditionalSettingsModal from './AdditionalSettingsModal'\r\nimport UploadImage from '../UploadImage'\r\n\r\n/*******************************************************************************\r\n * GroupSettings Component\r\n * Component for updating the information of a group\r\n *******************************************************************************/\r\n\r\nfunction GroupSettings({\r\n  group,\r\n  showGroupSettings,\r\n  handleClose,\r\n  onGroupUpdate,\r\n}) {\r\n  //Contains the state of the group's name, description and photo\r\n  const [groupName, setGroupName] = useState(group.name)\r\n  const [groupDescription, setGroupDescription] = useState(group.description)\r\n  const [groupPhoto, setGroupPhoto] = useState(group.photo)\r\n\r\n  //Additional settings modal to confirm deleting group\r\n  const [\r\n    showAdditionalSettingsModal,\r\n    setShowAdditionalSettingsModal,\r\n  ] = useState(false)\r\n  //Hide modal visibility when openning additional settings\r\n  const [modalVisibility, setModalVisibility] = useState('visible')\r\n\r\n  //Handle changes to the group name, description and photo\r\n  const handleNameChange = (e) => {\r\n    setGroupName(e.target.value)\r\n  }\r\n  const handleDescriptionChange = (e) => {\r\n    setGroupDescription(e.target.value)\r\n  }\r\n  function onUploadImage(image) {\r\n    setGroupPhoto(image)\r\n  }\r\n\r\n  //Save changes to the group information when clicked\r\n  function saveChanges() {\r\n    const groupData = {\r\n      name: groupName,\r\n      description: groupDescription,\r\n      photo: groupPhoto,\r\n    }\r\n    axios.put(`/api/v1/groups/${group._id}`, groupData)\r\n    onGroupUpdate(groupName, groupDescription, groupPhoto)\r\n    handleClose()\r\n  }\r\n\r\n  function openAdditionalSettingsModal() {\r\n    setModalVisibility('hidden')\r\n    setShowAdditionalSettingsModal(true)\r\n  }\r\n\r\n  //Close the additional settings modal for deleting group\r\n  function closeAdditionalSettingsModal() {\r\n    setModalVisibility('visible')\r\n    setShowAdditionalSettingsModal(false)\r\n  }\r\n\r\n  return (\r\n    <Modal show={showGroupSettings} onHide={handleClose}>\r\n      <div style={{ contentVisibility: modalVisibility }}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Settings</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Modal body contains input for changing the group photo, name and description */}\r\n          <label>Change Group Picture</label>\r\n          <br />\r\n          <Image\r\n            style={{ height: '100px' }}\r\n            src={`${baseURL}/uploads/${groupPhoto}`}\r\n            alt=''\r\n          />\r\n          <InputGroup className='mb-3'>\r\n            <UploadImage onUploadImage={onUploadImage} />\r\n          </InputGroup>\r\n          <InputGroup className='mb-3' key='name'>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Group Name</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              defaultValue={group.name}\r\n              onChange={handleNameChange}\r\n            ></FormControl>\r\n          </InputGroup>\r\n          <InputGroup className='mb-3' key='description'>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Description</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              as='textarea'\r\n              defaultValue={group.description}\r\n              onChange={handleDescriptionChange}\r\n            ></FormControl>\r\n          </InputGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='danger' onClick={openAdditionalSettingsModal}>\r\n            Delete Group\r\n          </Button>\r\n          <Button variant='primary' onClick={saveChanges}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n        <AdditionalSettingsModal\r\n          group={group}\r\n          showAdditionalSettingsModal={showAdditionalSettingsModal}\r\n          closeAdditionalSettingsModal={closeAdditionalSettingsModal}\r\n        />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default GroupSettings\r\n","import React, { useState } from 'react'\r\nimport axios from '../../axios'\r\nimport { Button, Modal, InputGroup, FormControl } from 'react-bootstrap'\r\n\r\n/***********************************************************************************\r\n * RequestModal Component\r\n * Modal for sending a message with the user's request inside GroupInfo and GameInfo\r\n ***********************************************************************************/\r\n\r\nfunction RequestModal({\r\n  modalType,\r\n  modalId,\r\n  showRequestModal,\r\n  closeRequestModal,\r\n  makeRequest,\r\n}) {\r\n  //State of request message and handler for message change\r\n  const [message, setMessage] = useState()\r\n  const handleMessageChange = (e) => {\r\n    setMessage(e.target.value)\r\n  }\r\n\r\n  // Send the request to join the modalType (groups/games)\r\n  function requestToJoinGroup() {\r\n    const reqBody = { message: message }\r\n    axios\r\n      .post(`/api/v1/${modalType}/${modalId}/request`, reqBody)\r\n      .then((res) => {\r\n        makeRequest()\r\n        closeRequestModal()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal show={showRequestModal} onHide={closeRequestModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Settings</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <InputGroup className='mb-3' key='description'>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Message</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            as='textarea'\r\n            onChange={handleMessageChange}\r\n          ></FormControl>\r\n        </InputGroup>\r\n        <Button variant='success' onClick={requestToJoinGroup}>\r\n          Make Request\r\n        </Button>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default RequestModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios, { baseURL } from '../../axios'\r\nimport { withRouter } from 'react-router'\r\nimport { Button, Card, Image, Tabs, Tab } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsersCog } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Header from '../Header'\r\nimport RequestList from '../requests/RequestList'\r\nimport UserList from '../users/UserList'\r\nimport GameList from '../games/GameList'\r\nimport GroupMap from '../maps/GroupMap'\r\nimport classes from './GroupInfo.module.css'\r\nimport InviteUserList from '../invites/InviteUserList'\r\nimport GroupSettings from './GroupSettings'\r\nimport CreateGameForm from '../games/CreateGameForm'\r\nimport RequestModal from '../requests/RequestModal'\r\n\r\n/*******************************************************************************\r\n * GroupInfo Component\r\n * Primary component for displaying the group information and settings\r\n *******************************************************************************/\r\n\r\nconst GroupInfo = (props) => {\r\n  //State of current group information\r\n  const [group, setGroup] = useState([])\r\n  const [groupName, setGroupName] = useState('')\r\n  const [groupDescription, setGroupDescription] = useState('')\r\n  const [photo, setPhoto] = useState([])\r\n  const [location, setLocation] = useState({\r\n    lat: 45.3875812,\r\n    lng: 75.69602019999999,\r\n  })\r\n\r\n  //State for lists of group information\r\n  const [games, setGames] = useState([])\r\n  const [currentGames, setCurrentGames] = useState([])\r\n  const [finishedGames, setFinishedGames] = useState([])\r\n  const [users, setUsers] = useState([])\r\n  const [inviteUsers, setInviteUsers] = useState([])\r\n  const [requests, setRequests] = useState([])\r\n\r\n  const [role, setRole] = useState([]) //Role of the current user in the group\r\n  const [canUserMakeRequest, setCanUserMakeRequest] = useState(true)\r\n  const [isUserInGroup, setIsUserInGroup] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const [showGroupSettings, setShowGroupSettings] = useState(false) //Show modal for group settings\r\n  const [showGameModal, setShowGameModal] = useState(false) //Show modal for creating a new group game\r\n  const [showRequestModal, setShowRequestModal] = useState(false) //Show modal for sending a request to join group\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/v1/groups/getGroupInfo/${props.match.params.id}`)\r\n      .then((res) => {\r\n        const groupData = res.data.data\r\n        const groupInfo = res.data.data.group\r\n        setGroup(groupInfo)\r\n        setGroupName(groupInfo.name)\r\n        setGroupDescription(groupInfo.description)\r\n        setGames(groupData.games)\r\n        setUsers(groupInfo.users)\r\n        setRequests(groupInfo.requests)\r\n        setPhoto(groupInfo.photo)\r\n        setLocation({\r\n          lat: groupInfo.location.coordinates[0],\r\n          lng: groupInfo.location.coordinates[1],\r\n        })\r\n        setCurrentGames(groupData.currentGames)\r\n        setFinishedGames(groupData.finishedGames)\r\n        setRole(groupData.role)\r\n        setInviteUsers(groupData.inviteUsers)\r\n\r\n        const user = groupData.user\r\n        //Check if current user has already made a request to join the group\r\n        if (groupInfo.requests.some((request) => request.user === user._id)) {\r\n          setCanUserMakeRequest(false)\r\n        }\r\n        //Check if current user is already part of the group\r\n        if (user.groups.some((userGroups) => userGroups._id === groupInfo.id)) {\r\n          setCanUserMakeRequest(false)\r\n          setIsUserInGroup(true)\r\n        }\r\n        setLoading(false)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }, [group._id])\r\n\r\n  //Add user to the list of users in the group (when a request is accepted)\r\n  function addUser(newUserList, requestUserId) {\r\n    setUsers(newUserList)\r\n    removeInviteUser(requestUserId)\r\n  }\r\n\r\n  //Remove the request from the list of requests\r\n  function deleteRequest(id) {\r\n    const newRequestList = requests.filter((request) => request._id !== id)\r\n    setRequests(newRequestList)\r\n  }\r\n\r\n  //Remove the user from the group\r\n  function removeUser(id) {\r\n    const newUserList = users.filter((user) => user._id !== id)\r\n    setUsers(newUserList)\r\n  }\r\n\r\n  //Change the location of the group\r\n  function onLocationChange(lat, lng) {\r\n    setLocation({ lat: lat, lng: lng })\r\n    const locationInfo = { location: { coordinates: [lat, lng] } }\r\n    axios.put(`/api/v1/groups/${group._id}`, locationInfo)\r\n  }\r\n\r\n  //Remove a user from the list of invite users\r\n  function removeInviteUser(id) {\r\n    const newInviteUsers = inviteUsers.filter((user) => user._id !== id)\r\n    setInviteUsers(newInviteUsers)\r\n  }\r\n\r\n  //Handles closing the settings, create game and request modals\r\n  const handleGroupSettingsClose = () => {\r\n    setShowGroupSettings(false)\r\n  }\r\n  const handleStartGameClose = () => {\r\n    setShowGameModal(false)\r\n  }\r\n  function closeRequestModal() {\r\n    setShowRequestModal(false)\r\n  }\r\n\r\n  //Update the group information inside the GroupSettings\r\n  function onGroupUpdate(name, description, photo) {\r\n    setGroupName(name)\r\n    setGroupDescription(description)\r\n    setPhoto(photo)\r\n  }\r\n\r\n  //Disables the request button if user makes a request\r\n  function makeRequest() {\r\n    setCanUserMakeRequest(false)\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.header}>\r\n        <Header />\r\n      </div>\r\n      {/* Map with the location of the group */}\r\n      <div className={classes.map}>\r\n        <GroupMap\r\n          google={props.google}\r\n          center={{ lat: location.lat, lng: location.lng }}\r\n          height='300px'\r\n          zoom={15}\r\n          onLocationChange={onLocationChange}\r\n          role={role}\r\n        />\r\n      </div>\r\n      {/* Contains the photo, name, description, settings and users of the group*/}\r\n      <div className={classes.users}>\r\n        <div className={classes.menu}>\r\n          {/* Contains the photo and name of the group */}\r\n          <div className={classes.groupinfo}>\r\n            <Image\r\n              className={classes.icon}\r\n              style={{ maxHeight: '100px', maxWidth: '100px' }}\r\n              src={`${baseURL}/uploads/${photo}`}\r\n            />\r\n            <p className={classes.name}>{groupName}</p>\r\n            {/* Contains the settings or request button */}\r\n            <div className={classes.settings}>\r\n              {canUserMakeRequest ? (\r\n                <div>\r\n                  <Button\r\n                    style={{ borderRadius: '5px' }}\r\n                    variant='dark'\r\n                    onClick={() => setShowRequestModal(true)}\r\n                  >\r\n                    Request to join group\r\n                  </Button>\r\n                  <RequestModal\r\n                    modalType={'groups'}\r\n                    modalId={group.id}\r\n                    showRequestModal={showRequestModal}\r\n                    closeRequestModal={closeRequestModal}\r\n                    makeRequest={makeRequest}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n              {/* Check if request has already been sent by user  */}\r\n              {!canUserMakeRequest && !isUserInGroup ? (\r\n                <div>\r\n                  <Button style={{ borderRadius: '5px' }} variant='success'>\r\n                    ✓ Request sent\r\n                  </Button>\r\n                </div>\r\n              ) : null}\r\n              {/* Only show group settings button for creator */}\r\n              {role.includes('creator') ? (\r\n                <div>\r\n                  <Button\r\n                    style={{ borderRadius: '5px' }}\r\n                    onClick={() => setShowGroupSettings(true)}\r\n                    variant='dark'\r\n                  >\r\n                    <FontAwesomeIcon icon={faUsersCog} />\r\n                    &nbsp; Settings\r\n                  </Button>\r\n                  <GroupSettings\r\n                    showGroupSettings={showGroupSettings}\r\n                    handleClose={handleGroupSettingsClose}\r\n                    group={group}\r\n                    onGroupUpdate={onGroupUpdate}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p>{groupDescription}</p>\r\n        {/* Tabs containing the list of users, requests and invite users */}\r\n        <Tabs defaultActiveKey='users'>\r\n          <Tab eventKey='users' title='Users'>\r\n            <UserList\r\n              users={users}\r\n              model={'groups'}\r\n              modelId={group.id}\r\n              removeUser={removeUser}\r\n              role={role}\r\n              competitive={group.competitive}\r\n            />\r\n          </Tab>\r\n          {role.includes('creator') || role.includes('manageUsers') ? (\r\n            <Tab eventKey='requests' title='Requests'>\r\n              <div>\r\n                <RequestList\r\n                  requests={requests}\r\n                  requestType={'groups'}\r\n                  typeId={group.id}\r\n                  deleteRequest={deleteRequest}\r\n                  addUser={addUser}\r\n                />\r\n              </div>\r\n            </Tab>\r\n          ) : null}\r\n          {role.includes('inviteUsers') ? (\r\n            <Tab eventKey='invite' title='Invite'>\r\n              <InviteUserList\r\n                users={inviteUsers}\r\n                modelType={'groups'}\r\n                modelId={group.id}\r\n                removeInviteUser={removeInviteUser}\r\n              />\r\n            </Tab>\r\n          ) : null}\r\n        </Tabs>\r\n      </div>\r\n      {/* Bottom component for displaying the list of games in the group */}\r\n      <div className={classes.games}>\r\n        <Card>\r\n          <div style={{ display: 'inline' }}>\r\n            <p className={classes.gameText}>Games</p>\r\n            {role.includes('createGames') ? (\r\n              <div>\r\n                <Button\r\n                  variant='secondary'\r\n                  className={classes.newbutton}\r\n                  onClick={() => setShowGameModal(true)}\r\n                >\r\n                  {' '}\r\n                  + Start a new Game\r\n                </Button>\r\n                <CreateGameForm\r\n                  showGameModal={showGameModal}\r\n                  handleClose={handleStartGameClose}\r\n                  group={group}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <Tabs defaultActiveKey='currentgames' className={classes.gamesTab}>\r\n            <Tab eventKey='currentgames' title='Current games'>\r\n              <GameList games={currentGames} />\r\n            </Tab>\r\n            <Tab eventKey='allgames' title='All games'>\r\n              <GameList games={games} />\r\n            </Tab>\r\n            <Tab eventKey='finishedgames' title='Finished games'>\r\n              <GameList games={finishedGames} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(GroupInfo)\r\n","import React from 'react'\r\nimport axios from '../../axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport classes from './Invite.module.css'\r\n\r\n/*******************************************************************************\r\n * Invite Component\r\n * Component for accepting or denying invites inside UserInfo\r\n *******************************************************************************/\r\n\r\nconst Invite = ({ invite, model, removeInvite, addModel }) => {\r\n  // Accept the invite of the current model (group/game)\r\n  const acceptInvite = (inviteId) => {\r\n    axios\r\n      .put(`/api/v1/users/${model}/invite/${invite._id}`)\r\n      .then((res) => {\r\n        removeInvite(inviteId, model)\r\n        addModel(res.data.data, model)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }\r\n\r\n  // Deny the invite of the current model (group/game)\r\n  const denyInvite = (inviteId) => {\r\n    axios\r\n      .delete(`/api/v1/users/${model}/invite/${invite._id}`)\r\n      .then(() => {\r\n        removeInvite(inviteId, model)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }\r\n  return (\r\n    <div>\r\n      <p>{invite.message}</p>\r\n      <FontAwesomeIcon\r\n        className={classes.acceptIcon}\r\n        icon={faCheckCircle}\r\n        onClick={() => acceptInvite(invite._id)}\r\n      />\r\n      <FontAwesomeIcon\r\n        className={classes.denyIcon}\r\n        icon={faTimesCircle}\r\n        onClick={() => denyInvite(invite._id)}\r\n      />\r\n      <br></br>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Invite\r\n","import React from 'react'\r\nimport Invite from './Invite'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport { MDBContainer } from 'mdbreact'\r\nimport '../scrollbar.css'\r\n\r\n/************************************************************************************\r\n * InviteList Component\r\n * Container component with a list of all invites a user has received inside UserInfo\r\n ************************************************************************************/\r\n\r\nfunction InviteList({ invites, model, removeInvite, addModel }) {\r\n  const scrollContainerStyle = { width: '470px', maxHeight: '200px' }\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <ListGroup\r\n        className='scrollbar scrollbar-primary mx-auto'\r\n        style={scrollContainerStyle}\r\n      >\r\n        {invites.map((invite) => (\r\n          <ListGroup.Item key={invite._id}>\r\n            <p>{invite._id}</p>\r\n            <Invite\r\n              key={invite._id}\r\n              invite={invite}\r\n              model={model}\r\n              removeInvite={removeInvite}\r\n              addModel={addModel}\r\n            />\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </MDBContainer>\r\n  )\r\n}\r\n\r\nexport default InviteList\r\n","import React, { useState } from 'react'\r\nimport { Button, Image, Modal, InputGroup, FormControl } from 'react-bootstrap'\r\nimport UploadImage from '../UploadImage'\r\nimport axios, { baseURL } from '../../axios'\r\n\r\n/*********************************************************************\r\n * UserSettings Component\r\n * Modal component for changing the photo or description of the user\r\n *********************************************************************/\r\n\r\nfunction UserSettings({ user, showUserSettings, handleClose, onUserUpdate }) {\r\n  //State for the user's description and photo input\r\n  const [userDescription, setUserDescription] = useState(user.description)\r\n  const [userPhoto, setUserPhoto] = useState(user.photo)\r\n  //Handle changes to the user's description or photo\r\n  const handleDescriptionChange = (e) => {\r\n    setUserDescription(e.target.value)\r\n  }\r\n\r\n  //Save the changes to the user's information\r\n  function saveChanges() {\r\n    const userData = {\r\n      description: userDescription,\r\n      photo: userPhoto,\r\n    }\r\n    axios.put(`/api/v1/users/${user._id}`, userData)\r\n    onUserUpdate(userDescription, userPhoto)\r\n    handleClose()\r\n  }\r\n\r\n  function onUploadImage(image) {\r\n    setUserPhoto(image)\r\n  }\r\n\r\n  return (\r\n    <Modal show={showUserSettings} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Settings</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* Modal body includes input for photo and description of user */}\r\n        <label>Change Profile Picture</label>\r\n        <br />\r\n        <Image\r\n          style={{ height: '100px' }}\r\n          src={`${baseURL}/uploads/${userPhoto}`}\r\n          alt=''\r\n        />\r\n        <InputGroup className='mb-3'>\r\n          <UploadImage onUploadImage={onUploadImage} />\r\n        </InputGroup>\r\n        <InputGroup className='mb-3' key='description'>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Bio</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            as='textarea'\r\n            defaultValue={user.description}\r\n            onChange={handleDescriptionChange}\r\n          ></FormControl>\r\n        </InputGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant='primary' onClick={saveChanges}>\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default UserSettings\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from '../../axios'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl,\r\n  ListGroup,\r\n} from 'react-bootstrap'\r\n\r\n/*******************************************************************************\r\n * InviteGroupModal Component\r\n * Modal component for inviting a user to a group inside their UserInfo\r\n *******************************************************************************/\r\n\r\nfunction InviteGroupModal({\r\n  showInviteGroupModal,\r\n  closeInviteGroupModal,\r\n  otherUser,\r\n}) {\r\n  const [inviteGroups, setInviteGroups] = useState([]) //List of all groups which the user can be invited to\r\n  const [invitedGroups, setInvitedGroups] = useState([]) //List of all groups which the user can be invited to\r\n  const [selectedGroup, setSelectedGroup] = useState({}) //The currently selected group in the inviteGroups list\r\n  const [message, setMessage] = useState() //Message to send the user with the invite\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/v1/users/${otherUser._id}/groupInvites`).then((res) => {\r\n      const inviteInfo = res.data.data\r\n      setInviteGroups(inviteInfo.groups)\r\n      setInvitedGroups(inviteInfo.alreadyInvitedGroups)\r\n    })\r\n  }, [])\r\n\r\n  //Send the invite to the user\r\n  function inviteUser() {\r\n    const reqBody = { message: message }\r\n    axios\r\n      .post(\r\n        `/api/v1/groups/${selectedGroup._id}/invite/${otherUser._id}`,\r\n        reqBody\r\n      )\r\n      .then((res) => {\r\n        let newInviteGroups = inviteGroups\r\n        newInviteGroups.splice(inviteGroups.indexOf(selectedGroup), 1)\r\n        setInviteGroups(newInviteGroups)\r\n        let newInvitedGroups = invitedGroups\r\n        newInvitedGroups.push(selectedGroup)\r\n        setInvitedGroups(newInvitedGroups)\r\n        closeInviteGroupModal()\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }\r\n\r\n  //Handles changes to the message state\r\n  const handleMessageChange = (e) => {\r\n    setMessage(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Modal show={showInviteGroupModal} onHide={closeInviteGroupModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Settings</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* Modal body contains the list of groups where the user can be invited (inviteGroups) */}\r\n        <ListGroup>\r\n          {inviteGroups.map((group) =>\r\n            selectedGroup._id === group._id ? (\r\n              //Set the selected group\r\n              <ListGroup.Item\r\n                style={{ backgroundColor: 'lightblue' }}\r\n                onClick={() => setSelectedGroup(group)}\r\n              >\r\n                <p>{group.name}</p>\r\n              </ListGroup.Item>\r\n            ) : (\r\n              // List of all groups that are not selected\r\n              <ListGroup.Item\r\n                style={{ backgroundColor: 'white' }}\r\n                onClick={() => setSelectedGroup(group)}\r\n              >\r\n                <p>{group.name}</p>\r\n              </ListGroup.Item>\r\n            )\r\n          )}\r\n          {invitedGroups.map((group) => (\r\n            <ListGroup.Item>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <p style={{ color: 'green' }}>✓ User Already Invited</p>\r\n                <p>{group.name}</p>\r\n              </div>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {/* Modal footer contains message to send user and 'Invite User' button */}\r\n        <InputGroup className='mb-3' key='description'>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Message</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            as='textarea'\r\n            onChange={handleMessageChange}\r\n          ></FormControl>\r\n        </InputGroup>\r\n        <Button variant='success' onClick={inviteUser}>\r\n          Invite User\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default InviteGroupModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from '../../axios'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl,\r\n  ListGroup,\r\n} from 'react-bootstrap'\r\n\r\n/*******************************************************************************\r\n * InviteGameModal Component\r\n * Modal component for inviting a user to a game inside their UserInfo\r\n *******************************************************************************/\r\n\r\nfunction InviteGameModal({\r\n  showInviteGameModal,\r\n  closeInviteGameModal,\r\n  otherUser,\r\n  addGameInviteToUser,\r\n}) {\r\n  const [inviteGames, setInviteGames] = useState([]) //List of all games which the user can be invited to\r\n  const [invitedGames, setInvitedGames] = useState([])\r\n  const [selectedGame, setSelectedGame] = useState({}) //The currently selected game in the inviteGames list\r\n  const [message, setMessage] = useState() //Message to send the user with the invite\r\n\r\n  //Find the games which the user can be invited to\r\n  useEffect(() => {\r\n    axios.get(`/api/v1/users/${otherUser._id}/gameInvites`).then((res) => {\r\n      const inviteInfo = res.data.data\r\n      setInviteGames(inviteInfo.games)\r\n      setInvitedGames(inviteInfo.alreadyInvitedGames)\r\n    })\r\n  }, [])\r\n\r\n  //Send the invite to the user\r\n  function inviteUser() {\r\n    const reqBody = { message: message }\r\n    axios\r\n      .post(\r\n        `/api/v1/games/${selectedGame._id}/invite/${otherUser._id}`,\r\n        reqBody\r\n      )\r\n      .then((res) => {\r\n        let newInviteGames = inviteGames\r\n        newInviteGames.splice(inviteGames.indexOf(selectedGame), 1)\r\n        setInviteGames(newInviteGames)\r\n        let newInvitedGames = invitedGames\r\n        newInvitedGames.push(selectedGame)\r\n        setInvitedGames(newInvitedGames)\r\n        closeInviteGameModal()\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }\r\n\r\n  //Handles changes to the message state\r\n  const handleMessageChange = (e) => {\r\n    setMessage(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Modal show={showInviteGameModal} onHide={closeInviteGameModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Settings</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* Modal body contains the list of games where the user can be invited (inviteGames) */}\r\n        <ListGroup>\r\n          {inviteGames.map((game) =>\r\n            // Set the selected game\r\n            selectedGame._id === game._id ? (\r\n              <ListGroup.Item\r\n                style={{ backgroundColor: 'lightblue' }}\r\n                onClick={() => setSelectedGame(game)}\r\n              >\r\n                <p>{game.title}</p>\r\n              </ListGroup.Item>\r\n            ) : (\r\n              // List of all games that are not selected\r\n              <ListGroup.Item\r\n                style={{ backgroundColor: 'white' }}\r\n                onClick={() => setSelectedGame(game)}\r\n              >\r\n                <p>{game.title}</p>\r\n              </ListGroup.Item>\r\n            )\r\n          )}\r\n          {invitedGames.map((game) => (\r\n            <ListGroup.Item>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <p>{game.title}</p>\r\n                <p style={{ color: 'green' }}>✓ User Already Invited</p>\r\n              </div>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      </Modal.Body>\r\n      {/* Modal footer contains message to send user and 'Invite User' button */}\r\n      <Modal.Footer>\r\n        <InputGroup className='mb-3' key='description'>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Message</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            as='textarea'\r\n            onChange={handleMessageChange}\r\n          ></FormControl>\r\n        </InputGroup>\r\n        <Button variant='success' onClick={inviteUser}>\r\n          Invite User\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default InviteGameModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios, { baseURL } from '../../axios'\r\nimport { withRouter } from 'react-router'\r\nimport { Button, Image, Tabs, Tab } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserCog } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport GroupList from '../groups/GroupList'\r\nimport GameList from '../games/GameList'\r\nimport InviteList from '../invites/InviteList'\r\nimport UserSettings from './UserSettings'\r\nimport classes from './UserInfo.module.css'\r\nimport InviteGroupModal from '../invites/InviteGroupModal'\r\nimport InviteGameModal from '../invites/InviteGameModal'\r\nimport Header from '../Header'\r\n\r\n/*****************************************************************************************************\r\n * UserInfo Component\r\n * Primary Component for displaying user information and changing the settings of the user\r\n *****************************************************************************************************/\r\n\r\nconst UserInfo = (props) => {\r\n  //State of user information\r\n  const [user, setUser] = useState([])\r\n  const [userDescription, setUserDescription] = useState('')\r\n  const [photo, setPhoto] = useState('')\r\n  const [groups, setGroups] = useState([])\r\n  const [games, setGames] = useState([])\r\n\r\n  //State of user invites\r\n  const [groupInvites, setGroupInvites] = useState([])\r\n  const [gameInvites, setGameInvites] = useState([])\r\n\r\n  //State for showing modals for user settings and invites to groups/games\r\n  const [showUserSettings, setShowUserSettings] = useState(false)\r\n  const [showInviteGroupModal, setShowInviteGroupModal] = useState(false)\r\n  const [showInviteGameModal, setShowInviteGameModal] = useState(false)\r\n\r\n  //Check if the profile being displayed is the current user\r\n  const [isCurrentUser, setIsCurrentUser] = useState(false)\r\n\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/v1/users/${props.match.params.id}`)\r\n      .then((res) => {\r\n        //Set the user's information\r\n        const userInfo = res.data.data\r\n        setPhoto(userInfo.photo)\r\n        setUser(userInfo)\r\n        setUserDescription(userInfo.description)\r\n        setGroupInvites(userInfo.groupInvites)\r\n        setGameInvites(userInfo.gameInvites)\r\n        setGroups(userInfo.groups)\r\n        setGames(userInfo.games)\r\n        if (userInfo.isCurrentUser) {\r\n          setIsCurrentUser(true)\r\n        }\r\n        setLoading(false)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }, [props.match.params.id])\r\n\r\n  //Handle closing the UserSettings, InviteGroupModal and InviteGameModal\r\n  const handleClose = () => {\r\n    setShowUserSettings(false)\r\n  }\r\n  const closeInviteGroupModal = () => {\r\n    setShowInviteGroupModal(false)\r\n  }\r\n  const closeInviteGameModal = () => {\r\n    setShowInviteGameModal(false)\r\n  }\r\n\r\n  //Handle updates to the user information in UserSettings\r\n  function onUserUpdate(description, photo) {\r\n    setUserDescription(description)\r\n    setPhoto(photo)\r\n  }\r\n\r\n  //Add the group/game invite to the invite list\r\n  function addGroupInviteToUser(groupInviteList) {\r\n    setGroupInvites(groupInviteList)\r\n    closeInviteGroupModal()\r\n  }\r\n  function addGameInviteToUser(gameInviteList) {\r\n    setGameInvites(gameInviteList)\r\n    closeInviteGameModal()\r\n  }\r\n\r\n  function removeInvite(id, model) {\r\n    //Remove the request from the request list\r\n    if (model === 'groups') {\r\n      const newInviteList = groupInvites.filter((invite) => invite._id !== id)\r\n      setGroupInvites(newInviteList)\r\n    }\r\n    if (model === 'games') {\r\n      const newInviteList = gameInvites.filter((invite) => invite._id !== id)\r\n      setGameInvites(newInviteList)\r\n    }\r\n  }\r\n\r\n  function addModel(data, model) {\r\n    if (model === 'groups') {\r\n      setGroups(data)\r\n    }\r\n    if (model === 'games') {\r\n      setGames(data)\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.header}>\r\n        <Header />\r\n      </div>\r\n      <div className={classes.userinfo}>\r\n        {/* Div containing the user's name and description */}\r\n        <div className={classes.info}>\r\n          <div className={classes.userName}>\r\n            <p>{user.name}</p>\r\n          </div>\r\n          <div className={classes.bio}>\r\n            <p>{userDescription}</p>\r\n          </div>\r\n        </div>\r\n        {/* User's profile photo */}\r\n        <Image\r\n          src={`${baseURL}/uploads/${photo}`}\r\n          className={classes.userPhoto}\r\n        />\r\n        {/* Show settings if profile is current user */}\r\n        {isCurrentUser ? (\r\n          <div>\r\n            <Button\r\n              className={classes.editProfile}\r\n              onClick={() => setShowUserSettings(true)}\r\n            >\r\n              Edit my profile &nbsp; <FontAwesomeIcon icon={faUserCog} />\r\n            </Button>\r\n            <UserSettings\r\n              showUserSettings={showUserSettings}\r\n              handleClose={handleClose}\r\n              user={user}\r\n              onUserUpdate={onUserUpdate}\r\n            />\r\n          </div>\r\n        ) : (\r\n          // Show Invite to Group/Game buttons if profile is not current user\r\n          <div>\r\n            <Button onClick={() => setShowInviteGroupModal(true)}>\r\n              Invite to group\r\n            </Button>\r\n            <InviteGroupModal\r\n              showInviteGroupModal={showInviteGroupModal}\r\n              closeInviteGroupModal={closeInviteGroupModal}\r\n              otherUser={user}\r\n              userGroupInvites={groupInvites}\r\n              addGroupInviteToUser={addGroupInviteToUser}\r\n            />\r\n            <Button onClick={() => setShowInviteGameModal(true)}>\r\n              Invite to game\r\n            </Button>\r\n            <InviteGameModal\r\n              showInviteGameModal={showInviteGameModal}\r\n              closeInviteGameModal={closeInviteGameModal}\r\n              otherUser={user}\r\n              userGameInvites={gameInvites}\r\n              addGameInviteToUser={addGameInviteToUser}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* Show a list of the user's groups and games */}\r\n      <div className={classes.groups}>\r\n        <Tabs defaultActiveKey='groups'>\r\n          <Tab eventKey='groups' title='Groups'>\r\n            <GroupList groups={groups} />\r\n          </Tab>\r\n          {isCurrentUser ? (\r\n            <Tab eventKey='invites' title='Group Invites'>\r\n              <InviteList\r\n                removeInvite={removeInvite}\r\n                addModel={addModel}\r\n                invites={groupInvites}\r\n                model={'groups'}\r\n              />\r\n            </Tab>\r\n          ) : null}\r\n        </Tabs>\r\n      </div>\r\n      <div className={classes.games}>\r\n        <Tabs defaultActiveKey='games'>\r\n          <Tab eventKey='games' title='Games'>\r\n            <GameList games={games} />\r\n          </Tab>\r\n          {isCurrentUser ? (\r\n            <Tab eventKey='invites' title='Game Invites'>\r\n              <InviteList\r\n                removeInvite={removeInvite}\r\n                addModel={addModel}\r\n                invites={gameInvites}\r\n                model={'games'}\r\n              />\r\n            </Tab>\r\n          ) : null}\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(UserInfo)\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport axios from '../../../axios'\r\n\r\n/*******************************************************************************\r\n * TeamModalUser Component\r\n * Options for setting the current team of every user in the game\r\n *******************************************************************************/\r\n\r\nconst TeamModalUser = ({\r\n  user,\r\n  otherUsers,\r\n  team,\r\n  currentTeam,\r\n  game,\r\n  setTeam1Users,\r\n  setTeam2Users,\r\n  setNoTeamUsers,\r\n}) => {\r\n  //Add a user who does not belong to any team (otherUsers) to the current team\r\n  const addUserToTeam = (user) => {\r\n    const teamInfo = {\r\n      user: user._id,\r\n      team: currentTeam,\r\n    }\r\n    axios.put(`/api/v1/games/${game}/team`, teamInfo).then((res) => {\r\n      let otherUsersTemp = otherUsers\r\n      otherUsersTemp.splice(otherUsersTemp.indexOf(user), 1)\r\n      if (currentTeam === 'team1') {\r\n        setTeam1Users(res.data.data.team1)\r\n      }\r\n      if (currentTeam === 'team2') {\r\n        setTeam2Users(res.data.data.team2)\r\n      }\r\n      setNoTeamUsers(otherUsersTemp)\r\n    })\r\n  }\r\n\r\n  //Remove a user from the current team\r\n  const removeUserFromTeam = (user) => {\r\n    axios\r\n      .delete(`/api/v1/games/${game}/team`, {\r\n        data: { user: user._id },\r\n      })\r\n      .then((res) => {\r\n        let otherUsersTemp = otherUsers\r\n        otherUsersTemp.push(user)\r\n        if (currentTeam === 'team1') {\r\n          setTeam1Users(res.data.data.team1)\r\n        }\r\n        if (currentTeam === 'team2') {\r\n          setTeam2Users(res.data.data.team2)\r\n        }\r\n        setNoTeamUsers(otherUsersTemp)\r\n      })\r\n  }\r\n\r\n  //Change the team of the selected user\r\n  const changeUserTeam = (user) => {\r\n    const teamInfo = {\r\n      user: user._id,\r\n      team: currentTeam,\r\n    }\r\n    axios.put(`/api/v1/games/${game}/team`, teamInfo).then((res) => {\r\n      setTeam1Users(res.data.data.team1)\r\n      setTeam2Users(res.data.data.team2)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n      <p>{user.name}</p>\r\n      {currentTeam === 'team1' ? (\r\n        <div>\r\n          {team === 'none' ? (\r\n            <Button onClick={() => addUserToTeam(user)}>\r\n              + Add User to Team\r\n            </Button>\r\n          ) : null}\r\n          {team === 'team1' ? (\r\n            <Button onClick={() => removeUserFromTeam(user)}>\r\n              - Remove User From Team\r\n            </Button>\r\n          ) : null}\r\n          {team === 'team2' ? (\r\n            <Button onClick={() => changeUserTeam(user)}>Change teams</Button>\r\n          ) : null}\r\n        </div>\r\n      ) : null}\r\n      {currentTeam === 'team2' ? (\r\n        <div>\r\n          {team === 'none' ? (\r\n            <Button onClick={() => addUserToTeam(user)}>\r\n              + Add User to Team\r\n            </Button>\r\n          ) : null}\r\n          {team === 'team2' ? (\r\n            <Button onClick={() => removeUserFromTeam(user)}>\r\n              - Remove User From Team\r\n            </Button>\r\n          ) : null}\r\n          {team === 'team1' ? (\r\n            <Button onClick={() => changeUserTeam(user)}>Change teams</Button>\r\n          ) : null}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeamModalUser\r\n","import React from 'react'\r\nimport TeamModalUser from './TeamModalUser'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport '../../scrollbar.css'\r\n\r\n/*******************************************************************************\r\n * TeamModalList Component\r\n * Container for the list of users on each team\r\n *******************************************************************************/\r\n\r\nfunction TeamModalList({\r\n  otherUsers,\r\n  team1,\r\n  team2,\r\n  setTeam1Users,\r\n  setTeam2Users,\r\n  setNoTeamUsers,\r\n  currentTeam,\r\n  game,\r\n}) {\r\n  const scrollContainerStyle = { width: '470px', maxHeight: '200px' }\r\n  return (\r\n    <div>\r\n      <ListGroup\r\n        className='scrollbar scrollbar-primary  mx-auto'\r\n        style={scrollContainerStyle}\r\n      >\r\n        {/* First, list all users who do not belong to any team */}\r\n        {otherUsers.map((user) => (\r\n          <ListGroup.Item key={user.id}>\r\n            <TeamModalUser\r\n              user={user}\r\n              otherUsers={otherUsers}\r\n              setTeam1Users={setTeam1Users}\r\n              setTeam2Users={setTeam2Users}\r\n              setNoTeamUsers={setNoTeamUsers}\r\n              currentTeam={currentTeam}\r\n              game={game}\r\n              team={'none'}\r\n            />\r\n          </ListGroup.Item>\r\n        ))}\r\n        {/* Second, list all users on team 1*/}\r\n        {team1.users.map((user) => (\r\n          <ListGroup.Item key={user.id}>\r\n            <TeamModalUser\r\n              user={user}\r\n              otherUsers={otherUsers}\r\n              setTeam1Users={setTeam1Users}\r\n              setTeam2Users={setTeam2Users}\r\n              setNoTeamUsers={setNoTeamUsers}\r\n              currentTeam={currentTeam}\r\n              game={game}\r\n              team={'team1'}\r\n            />\r\n          </ListGroup.Item>\r\n        ))}\r\n        {/* Last, list all users on team 2*/}\r\n        {team2.users.map((user) => (\r\n          <ListGroup.Item key={user.id}>\r\n            <TeamModalUser\r\n              user={user}\r\n              otherUsers={otherUsers}\r\n              setTeam1Users={setTeam1Users}\r\n              setTeam2Users={setTeam2Users}\r\n              setNoTeamUsers={setNoTeamUsers}\r\n              currentTeam={currentTeam}\r\n              game={game}\r\n              team={'team2'}\r\n            />\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeamModalList\r\n","import React, { useState } from 'react'\r\nimport { Button, Image, InputGroup, Modal, FormControl } from 'react-bootstrap'\r\nimport TeamModalList from './TeamModalList'\r\nimport UploadImage from '../../UploadImage'\r\nimport axios, { baseURL } from '../../../axios'\r\n\r\n/*******************************************************************************\r\n * TeamModal Component\r\n * Opens the team settings when user clicks on 'Edit Team' in TeamList Component\r\n *******************************************************************************/\r\n\r\nfunction TeamModal({\r\n  otherUsers,\r\n  team1,\r\n  team2,\r\n  setTeam1Users,\r\n  setTeam2Users,\r\n  setNoTeamUsers,\r\n  game,\r\n  currentTeam,\r\n  showModal,\r\n  handleClose,\r\n  onTeamUpdate,\r\n}) {\r\n  //Handles the state of the current team's photo\r\n  const [team1Photo, setTeam1Photo] = useState(team1.photo)\r\n  const [team2Photo, setTeam2Photo] = useState(team2.photo)\r\n  function onUploadImage(image) {\r\n    if (currentTeam === 'team1') {\r\n      setTeam1Photo(image)\r\n    } else {\r\n      setTeam2Photo(image)\r\n    }\r\n  }\r\n\r\n  //Handles the state of the current team's name\r\n  const [team1Name, setTeam1Name] = useState(team1.name)\r\n  const [team2Name, setTeam2Name] = useState(team2.name)\r\n  const handleTeamNameChange = (e) => {\r\n    if (currentTeam === 'team1') {\r\n      setTeam1Name(e.target.value)\r\n    }\r\n    if (currentTeam === 'team2') {\r\n      setTeam2Name(e.target.value)\r\n    }\r\n  }\r\n\r\n  //Function to update team data when user clicks on 'Save Changes'\r\n  function saveChanges() {\r\n    let gameData\r\n    if (currentTeam === 'team1') {\r\n      gameData = {\r\n        team1: { name: team1Name, photo: team1Photo },\r\n      }\r\n      onTeamUpdate(team1Name, team1Photo, 'team1')\r\n    }\r\n    if (currentTeam === 'team2') {\r\n      gameData = {\r\n        team2: { name: team2Name, photo: team2Photo },\r\n      }\r\n      onTeamUpdate(team2Name, team2Photo, 'team2')\r\n    }\r\n    axios.put(`/api/v1/games/${game}`, gameData)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <Modal show={showModal} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          {currentTeam === 'team1' ? team1.name : team2.name}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      {/* Modal body contains settings for changing team photo and name  */}\r\n      <Modal.Body>\r\n        {currentTeam === 'team1' ? (\r\n          <Image\r\n            src={`${baseURL}/uploads/${team1.photo}`}\r\n            style={{ maxHeight: '50px', maxWidth: '50px' }}\r\n          />\r\n        ) : (\r\n          <Image\r\n            src={`${baseURL}/uploads/${team2.photo}`}\r\n            style={{ maxHeight: '50px', maxWidth: '50px' }}\r\n          />\r\n        )}\r\n        <InputGroup className='mb-3'>\r\n          <UploadImage onUploadImage={onUploadImage} />\r\n        </InputGroup>\r\n        <InputGroup className='mb-3'>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text id='basic-addon1'>Team Name</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          {currentTeam === 'team1' ? (\r\n            <FormControl\r\n              placeholder={team1.name}\r\n              onChange={handleTeamNameChange}\r\n              aria-describedby='basic-addon1'\r\n            />\r\n          ) : (\r\n            <FormControl\r\n              placeholder={team2.name}\r\n              onChange={handleTeamNameChange}\r\n              aria-describedby='basic-addon1'\r\n            />\r\n          )}\r\n        </InputGroup>\r\n        <Button onClick={saveChanges}>Save Changes</Button>\r\n      </Modal.Body>\r\n      {/* Modal footer contains settings for changing team members */}\r\n      <Modal.Footer>\r\n        <TeamModalList\r\n          otherUsers={otherUsers}\r\n          team1={team1}\r\n          team2={team2}\r\n          setTeam1Users={setTeam1Users}\r\n          setTeam2Users={setTeam2Users}\r\n          setNoTeamUsers={setNoTeamUsers}\r\n          currentTeam={currentTeam}\r\n          game={game}\r\n        />\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TeamModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Card, Image } from 'react-bootstrap'\r\nimport { MDBContainer } from 'mdbreact'\r\nimport '../../scrollbar.css'\r\nimport TeamModal from './TeamModal'\r\nimport UserList from '../../users/UserList'\r\nimport { baseURL } from '../../../axios'\r\n\r\n/*******************************************************************************\r\n * TeamList Component\r\n * Contains a list of users on each team in the GameInfo component\r\n *******************************************************************************/\r\n\r\nfunction TeamList({\r\n  otherUsers,\r\n  team1,\r\n  team2,\r\n  game,\r\n  setTeam1Users,\r\n  setTeam2Users,\r\n  setNoTeamUsers,\r\n  winner,\r\n  onTeamUpdate,\r\n}) {\r\n  //Set the background of the winning team to light green if a winner is declared\r\n  const [team1Color, setTeam1Color] = useState('white')\r\n  const [team2Color, setTeam2Color] = useState('white')\r\n  const [team1WinnerText, setTeam1WinnerText] = useState('')\r\n  const [team2WinnerText, setTeam2WinnerText] = useState('')\r\n\r\n  //Handles showing the modal when clicking on 'Edit team'\r\n  const [showTeam1Modal, setShowTeam1Modal] = useState(false)\r\n  const [showTeam2Modal, setShowTeam2Modal] = useState(false)\r\n  const handleClose = () => {\r\n    setShowTeam1Modal(false)\r\n    setShowTeam2Modal(false)\r\n  }\r\n\r\n  //Checks if a winner is declared\r\n  useEffect(() => {\r\n    if (winner === 'team1') {\r\n      setTeam1Color('lightgreen')\r\n      setTeam2Color('#ffcccb')\r\n      setTeam1WinnerText('Winner!')\r\n    }\r\n    if (winner === 'team2') {\r\n      setTeam2Color('lightgreen')\r\n      setTeam1Color('#ffcccb')\r\n      setTeam2WinnerText('Winner!')\r\n    }\r\n  }, [winner])\r\n\r\n  return (\r\n    <div>\r\n      <MDBContainer>\r\n        {/* Team 1 List */}\r\n        <div style={{ float: 'left' }}>\r\n          <Card\r\n            style={{\r\n              marginTop: '5px',\r\n              padding: '5px',\r\n              backgroundColor: team1Color,\r\n            }}\r\n          >\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Image\r\n                src={`${baseURL}/uploads/${team1.photo}`}\r\n                style={{ maxHeight: '50px', maxWidth: '50px' }}\r\n              />\r\n              <p>{team1.name}</p>\r\n              {!winner ? (\r\n                <Button onClick={() => setShowTeam1Modal(true)}>\r\n                  Edit team\r\n                </Button>\r\n              ) : (\r\n                <p>{team1WinnerText}</p>\r\n              )}\r\n              <TeamModal\r\n                otherUsers={otherUsers}\r\n                team1={team1}\r\n                team2={team2}\r\n                setTeam1Users={setTeam1Users}\r\n                setTeam2Users={setTeam2Users}\r\n                setNoTeamUsers={setNoTeamUsers}\r\n                currentTeam='team1'\r\n                game={game}\r\n                showModal={showTeam1Modal}\r\n                handleClose={handleClose}\r\n                onTeamUpdate={onTeamUpdate}\r\n              />\r\n            </div>\r\n            <UserList users={team1.users} model={'teams'} role={''} />\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Team 2 List */}\r\n        <div style={{ float: 'right' }}>\r\n          <Card\r\n            style={{\r\n              marginTop: '5px',\r\n              padding: '5px',\r\n              backgroundColor: team2Color,\r\n            }}\r\n          >\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Image\r\n                src={`${baseURL}/uploads/${team2.photo}`}\r\n                style={{ maxHeight: '50px', maxWidth: '50px', float: 'left' }}\r\n              />\r\n              <p>{team2.name}</p>\r\n              {!winner ? (\r\n                <Button\r\n                  style={{ float: 'right' }}\r\n                  onClick={() => setShowTeam2Modal(true)}\r\n                >\r\n                  Edit team\r\n                </Button>\r\n              ) : (\r\n                <p>{team2WinnerText}</p>\r\n              )}\r\n              <TeamModal\r\n                otherUsers={otherUsers}\r\n                team1={team1}\r\n                team2={team2}\r\n                setTeam1Users={setTeam1Users}\r\n                setTeam2Users={setTeam2Users}\r\n                setNoTeamUsers={setNoTeamUsers}\r\n                currentTeam='team2'\r\n                game={game}\r\n                showModal={showTeam2Modal}\r\n                handleClose={handleClose}\r\n                onTeamUpdate={onTeamUpdate}\r\n              />\r\n            </div>\r\n            <UserList users={team2.users} model={'teams'} role={''} />\r\n          </Card>\r\n        </div>\r\n      </MDBContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeamList\r\n","import React, { Component } from 'react'\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  InfoWindow,\r\n  Marker,\r\n} from 'react-google-maps'\r\nimport Autocomplete from 'react-google-autocomplete'\r\nimport Geocode from 'react-geocode'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nGeocode.setApiKey('AIzaSyBY-Mx2muSMsIf14UNilYTUo1MEkhpJPyY')\r\nGeocode.enableDebug()\r\n\r\n/*******************************************************************************\r\n * GameMap Component\r\n * Map component in GameInfo where the creator can change the location\r\n *******************************************************************************/\r\n\r\nclass GameMap extends Component {\r\n  // Set the location and address of the map to the location provided\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      address: '',\r\n      city: '',\r\n      area: '',\r\n      state: '',\r\n      mapPosition: {\r\n        lat: this.props.center.lat,\r\n        lng: this.props.center.lng,\r\n      },\r\n      markerPosition: {\r\n        lat: this.props.center.lat,\r\n        lng: this.props.center.lng,\r\n      },\r\n      role: [],\r\n      changeGameLocation: false,\r\n      winner: this.props.winner,\r\n    }\r\n  }\r\n  /**\r\n   * Get the current address from the default map position and set those values in the state\r\n   */\r\n  componentDidMount() {\r\n    this.setState({ role: this.props.role })\r\n    Geocode.fromLatLng(\r\n      this.state.mapPosition.lat,\r\n      this.state.mapPosition.lng\r\n    ).then(\r\n      (response) => {\r\n        const address = response.results[0].formatted_address,\r\n          addressArray = response.results[0].address_components,\r\n          city = this.getCity(addressArray),\r\n          area = this.getArea(addressArray),\r\n          state = this.getState(addressArray)\r\n        this.setState({\r\n          address: address ? address : '',\r\n          area: area ? area : '',\r\n          city: city ? city : '',\r\n          state: state ? state : '',\r\n        })\r\n      },\r\n      (error) => {\r\n        console.error(error)\r\n      }\r\n    )\r\n  }\r\n  /**\r\n   * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\r\n   */\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      this.state.markerPosition.lat !== this.props.center.lat ||\r\n      this.state.address !== nextState.address ||\r\n      this.state.city !== nextState.city ||\r\n      this.state.area !== nextState.area ||\r\n      this.state.state !== nextState.state ||\r\n      this.state.changeGameLocation !== nextState.changeGameLocation ||\r\n      this.state.winner !== nextState.winner\r\n    ) {\r\n      return true\r\n    } else if (this.props.center.lat === nextProps.center.lat) {\r\n      return false\r\n    }\r\n  }\r\n  /**\r\n   * Get the city and set the city input value to the one selected\r\n   */\r\n\r\n  getCity = (addressArray) => {\r\n    let city = ''\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n      if (\r\n        addressArray[i].types[0] &&\r\n        'administrative_area_level_2' === addressArray[i].types[0]\r\n      ) {\r\n        city = addressArray[i].long_name\r\n        return city\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Get the area and set the area input value to the one selected\r\n   */\r\n  getArea = (addressArray) => {\r\n    let area = ''\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n      if (addressArray[i].types[0]) {\r\n        for (let j = 0; j < addressArray[i].types.length; j++) {\r\n          if (\r\n            'sublocality_level_1' === addressArray[i].types[j] ||\r\n            'locality' === addressArray[i].types[j]\r\n          ) {\r\n            area = addressArray[i].long_name\r\n            return area\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Get the address and set the address input value to the one selected\r\n   */\r\n  getState = (addressArray) => {\r\n    let state = ''\r\n    for (let i = 0; i < addressArray.length; i++) {\r\n      for (let i = 0; i < addressArray.length; i++) {\r\n        if (\r\n          addressArray[i].types[0] &&\r\n          'administrative_area_level_1' === addressArray[i].types[0]\r\n        ) {\r\n          state = addressArray[i].long_name\r\n          return state\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Function for city,state and address input\r\n   */\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value })\r\n  }\r\n\r\n  /**\r\n   * When the marker is dragged you get the lat and long using the functions available from event object.\r\n   * Use geocode to get the address, city, area and state from the lat and lng positions.\r\n   * And then set those values in the state.\r\n   */\r\n  onMarkerDragEnd = (event) => {\r\n    let newLat = event.latLng.lat(),\r\n      newLng = event.latLng.lng()\r\n\r\n    Geocode.fromLatLng(newLat, newLng).then(\r\n      (response) => {\r\n        const address = response.results[0].formatted_address,\r\n          addressArray = response.results[0].address_components,\r\n          city = this.getCity(addressArray),\r\n          area = this.getArea(addressArray),\r\n          state = this.getState(addressArray)\r\n        this.setState({\r\n          address: address ? address : '',\r\n          area: area ? area : '',\r\n          city: city ? city : '',\r\n          state: state ? state : '',\r\n          markerPosition: {\r\n            lat: newLat,\r\n            lng: newLng,\r\n          },\r\n          mapPosition: {\r\n            lat: newLat,\r\n            lng: newLng,\r\n          },\r\n        })\r\n        this.props.onLocationChange(newLat, newLng)\r\n      },\r\n      (error) => {\r\n        console.error(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * When the user types an address in the search box\r\n   */\r\n  onPlaceSelected = (place) => {\r\n    console.log('plc', place)\r\n    const address = place.formatted_address,\r\n      addressArray = place.address_components,\r\n      city = this.getCity(addressArray),\r\n      area = this.getArea(addressArray),\r\n      state = this.getState(addressArray),\r\n      latValue = place.geometry.location.lat(),\r\n      lngValue = place.geometry.location.lng()\r\n    // Set these values in the state.\r\n    this.setState({\r\n      address: address ? address : '',\r\n      area: area ? area : '',\r\n      city: city ? city : '',\r\n      state: state ? state : '',\r\n      markerPosition: {\r\n        lat: latValue,\r\n        lng: lngValue,\r\n      },\r\n      mapPosition: {\r\n        lat: latValue,\r\n        lng: lngValue,\r\n      },\r\n    })\r\n    this.props.onLocationChange(latValue, lngValue)\r\n  }\r\n\r\n  render() {\r\n    const AsyncMap = withScriptjs(\r\n      withGoogleMap((props) => (\r\n        <GoogleMap\r\n          google={this.props.google}\r\n          defaultZoom={this.props.zoom}\r\n          defaultCenter={{\r\n            lat: this.state.mapPosition.lat,\r\n            lng: this.state.mapPosition.lng,\r\n          }}\r\n        >\r\n          {/* InfoWindow on top of marker */}\r\n          <InfoWindow\r\n            onClose={this.onInfoWindowClose}\r\n            position={{\r\n              lat: this.state.markerPosition.lat + 0.0018,\r\n              lng: this.state.markerPosition.lng,\r\n            }}\r\n          >\r\n            <div>\r\n              <span style={{ padding: 0, margin: 0 }}>\r\n                {this.state.address}\r\n              </span>\r\n            </div>\r\n          </InfoWindow>\r\n          {/*Draggable marker if changing game location*/}\r\n          {this.state.changeGameLocation ? (\r\n            <Marker\r\n              google={this.props.google}\r\n              name={'Dolores park'}\r\n              draggable={true}\r\n              onDragEnd={this.onMarkerDragEnd}\r\n              position={{\r\n                lat: this.state.markerPosition.lat,\r\n                lng: this.state.markerPosition.lng,\r\n              }}\r\n            />\r\n          ) : (\r\n            //Non draggable marker if user is not creator\r\n            <Marker\r\n              google={this.props.google}\r\n              name={'Dolores park'}\r\n              draggable={false}\r\n              position={{\r\n                lat: this.state.markerPosition.lat,\r\n                lng: this.state.markerPosition.lng,\r\n              }}\r\n            />\r\n          )}\r\n          {/* For Auto complete Search Box */}\r\n          {this.state.changeGameLocation ? (\r\n            <div>\r\n              <Autocomplete\r\n                style={{\r\n                  width: '100%',\r\n                  height: '40px',\r\n                  paddingLeft: '16px',\r\n                  marginTop: '2px',\r\n                }}\r\n                onPlaceSelected={this.onPlaceSelected}\r\n                types={'(street_address)'}\r\n              />\r\n              <Button\r\n                onClick={() => this.setState({ changeGameLocation: false })}\r\n                style={{ marginTop: '2px' }}\r\n              >\r\n                Finished Changing Location\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          {!this.state.changeGameLocation &&\r\n          !this.state.winner &&\r\n          this.state.role.includes('creator') ? (\r\n            <Button onClick={() => this.setState({ changeGameLocation: true })}>\r\n              Change Game Location\r\n            </Button>\r\n          ) : null}\r\n        </GoogleMap>\r\n      ))\r\n    )\r\n    let map\r\n    if (this.props.center.lat !== undefined) {\r\n      map = (\r\n        <div>\r\n          <AsyncMap\r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyBY-Mx2muSMsIf14UNilYTUo1MEkhpJPyY&libraries=places`}\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: this.props.height }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n          />\r\n        </div>\r\n      )\r\n    } else {\r\n      map = <div style={{ height: this.props.height }} />\r\n    }\r\n    return map\r\n  }\r\n}\r\nexport default GameMap\r\n","import React, { useState } from 'react'\r\nimport axios from '../../axios'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n/****************************************************************************************\r\n * GameSettings Component\r\n * Additional settings modal component for selecting winner and confirming to delete game\r\n ****************************************************************************************/\r\n\r\nfunction GameSettings({\r\n  game,\r\n  showSettingsModal,\r\n  handleClose,\r\n  closeSettingsModal,\r\n  shouldFinishGame,\r\n  shouldDeleteGame,\r\n  team1,\r\n  team2,\r\n  setGameWinner,\r\n}) {\r\n  const [redirect, setRedirect] = useState(false) //Redirect user to dashboard if game is deleted\r\n\r\n  //Set the game winner when user clicks on 'Finish Game' button\r\n  function finishGame(winner) {\r\n    const reqBody = { winner: winner }\r\n    axios.put(`/api/v1/games/${game._id}/finish`, reqBody).then((res) => {\r\n      setGameWinner(res.data.data.game.winner)\r\n      handleClose()\r\n    })\r\n  }\r\n\r\n  //Delete the game when user clicks on 'Delete Game' button and confirms\r\n  function deleteGame() {\r\n    axios\r\n      .delete(`/api/v1/games/${game._id}`)\r\n      .then((res) => {\r\n        setRedirect(true)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal show={showSettingsModal} onHide={closeSettingsModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Settings</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {/* Modal body if user selects 'Delete Game' option */}\r\n        {shouldDeleteGame ? (\r\n          <div>\r\n            <Modal.Title>\r\n              Are you sure you want to delete this game?\r\n            </Modal.Title>\r\n            <br />\r\n            <Button\r\n              style={{ marginLeft: '120px' }}\r\n              variant='danger'\r\n              onClick={deleteGame}\r\n            >\r\n              Yes\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: '50px' }}\r\n              variant='info'\r\n              onClick={closeSettingsModal}\r\n            >\r\n              No\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n        {/* Modal body if user selects 'Finish Game' option */}\r\n        {shouldFinishGame ? (\r\n          <div>\r\n            <Modal.Title>Who won the game?</Modal.Title>\r\n            <br />\r\n            <Button\r\n              style={{ marginLeft: '120px' }}\r\n              variant='primary'\r\n              onClick={() => finishGame('team1')}\r\n            >\r\n              {team1.name}\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: '50px' }}\r\n              variant='primary'\r\n              onClick={() => finishGame('team2')}\r\n            >\r\n              {team2.name}\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </Modal.Body>\r\n      {redirect ? <Redirect to='/dashboard' /> : null}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default GameSettings\r\n","import React, { useState } from 'react'\r\nimport { Button, Image, Modal, InputGroup, FormControl } from 'react-bootstrap'\r\nimport UploadImage from '../UploadImage'\r\nimport axios, { baseURL } from '../../axios'\r\nimport SettingsModal from './SettingsModal'\r\nimport DateTimePicker from 'react-datetime-picker'\r\n\r\n/*******************************************************************************\r\n * GameSettings Component\r\n * Modal component for changing the information of a game\r\n *******************************************************************************/\r\n\r\nfunction GameSettings({\r\n  game,\r\n  team1,\r\n  team2,\r\n  showGameSettings,\r\n  handleClose,\r\n  onGameUpdate,\r\n  setGameWinner,\r\n}) {\r\n  //State for showing or hiding current settings modal\r\n  const [showSettingsModal, setShowSettingsModal] = useState(false)\r\n  //State of current game information\r\n  const [gameTitle, setGameTitle] = useState(game.title)\r\n  const [gameDescription, setGameDescription] = useState(game.description)\r\n  const [gamePhoto, setGamePhoto] = useState(game.photo)\r\n  const [time, setTime] = useState(new Date())\r\n  //Checks if the user selects FinishGame or DeleteGame\r\n  const [finishGame, setFinishGame] = useState(false)\r\n  const [deleteGame, setDeleteGame] = useState(false)\r\n  //Hides the GameSettings modal when the additional SettingsModal is opened\r\n  const [modalVisibility, setModalVisibility] = useState('visible')\r\n\r\n  //Handler for closing the SettingsModal\r\n  function closeSettingsModal() {\r\n    setShowSettingsModal(false)\r\n    setModalVisibility('visible')\r\n    setDeleteGame(false)\r\n    setFinishGame(false)\r\n  }\r\n\r\n  //Handler for changing the title and description of the game\r\n  const handleTitleChange = (e) => {\r\n    setGameTitle(e.target.value)\r\n  }\r\n  const handleDescriptionChange = (e) => {\r\n    setGameDescription(e.target.value)\r\n  }\r\n\r\n  //Update the game photo using the UploadImage component\r\n  function onUploadImage(image) {\r\n    setGamePhoto(image)\r\n  }\r\n\r\n  //Handles changes when user clicks on the 'Save Changed' button\r\n  function saveChanges() {\r\n    const gameData = {\r\n      title: gameTitle,\r\n      description: gameDescription,\r\n      photo: gamePhoto,\r\n      time: time,\r\n    }\r\n    axios.put(`/api/v1/games/${game._id}`, gameData)\r\n    onGameUpdate(gameTitle, gameDescription, gamePhoto, time)\r\n    handleClose()\r\n  }\r\n\r\n  //Opens the additional SettingsModal for deleting games and finishing games\r\n  function openAdditionalSettings(setting) {\r\n    setModalVisibility('hidden')\r\n    setShowSettingsModal(true)\r\n    if (setting === 'deleteGame') {\r\n      setDeleteGame(true)\r\n    }\r\n    if (setting === 'finishGame') {\r\n      setFinishGame(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={showGameSettings} onHide={handleClose}>\r\n      <div style={{ contentVisibility: modalVisibility }}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Settings</Modal.Title>\r\n        </Modal.Header>\r\n        {/* Modal body contains settings for changing the photo, name, description and time of the game */}\r\n        <Modal.Body>\r\n          <label>Change Game Picture</label>\r\n          <br />\r\n          <Image\r\n            style={{ height: '100px' }}\r\n            src={`${baseURL}/uploads/${gamePhoto}`}\r\n            alt=''\r\n          />\r\n          <InputGroup className='mb-3'>\r\n            <UploadImage onUploadImage={onUploadImage} />\r\n          </InputGroup>\r\n          <InputGroup className='mb-3' key='title'>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Game Name</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              defaultValue={game.title}\r\n              onChange={handleTitleChange}\r\n            ></FormControl>\r\n          </InputGroup>\r\n          <InputGroup className='mb-3' key='description'>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Description</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              as='textarea'\r\n              defaultValue={game.description}\r\n              onChange={handleDescriptionChange}\r\n            ></FormControl>\r\n          </InputGroup>\r\n          <InputGroup className='mb-3' key='time'>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Time</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <DateTimePicker\r\n              onChange={setTime}\r\n              value={time}\r\n              maxDetail={'minute'}\r\n            />\r\n          </InputGroup>\r\n          <Button variant='primary' onClick={saveChanges}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Body>\r\n        {/* Modal footer contains settings for finishing and deleting game */}\r\n        <Modal.Footer>\r\n          <SettingsModal\r\n            showSettingsModal={showSettingsModal}\r\n            closeSettingsModal={closeSettingsModal}\r\n            handleClose={handleClose}\r\n            shouldDeleteGame={deleteGame}\r\n            shouldFinishGame={finishGame}\r\n            game={game}\r\n            team1={team1}\r\n            team2={team2}\r\n            setGameWinner={setGameWinner}\r\n          />\r\n          <Button\r\n            style={{ marginRight: '50px' }}\r\n            variant='success'\r\n            onClick={() => openAdditionalSettings('finishGame')}\r\n          >\r\n            Finish Game\r\n          </Button>\r\n          <Button\r\n            style={{ marginRight: '80px' }}\r\n            variant='danger'\r\n            onClick={() => openAdditionalSettings('deleteGame')}\r\n          >\r\n            Delete Game\r\n          </Button>\r\n        </Modal.Footer>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default GameSettings\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios, { baseURL } from '../../axios'\r\nimport { withRouter } from 'react-router'\r\nimport { Button, Card, Image, Tabs, Tab } from 'react-bootstrap'\r\n\r\nimport Header from '../Header'\r\nimport RequestList from '../requests/RequestList'\r\nimport UserList from '../users/UserList'\r\nimport TeamList from '../games/teams/TeamList'\r\nimport GameMap from '../maps/GameMap'\r\nimport classes from './GameInfo.module.css'\r\nimport InviteUserList from '../invites/InviteUserList'\r\nimport GameSettings from './GameSettings'\r\nimport RequestModal from '../requests/RequestModal'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n/*******************************************************************************\r\n * GameInfo Component\r\n * Primary component for displaying all game information and settings\r\n *******************************************************************************/\r\n\r\nconst GameInfo = (props) => {\r\n  const [game, setGame] = useState({}) //Contains all the information of the current game\r\n  const [gameTitle, setGameTitle] = useState('') //Contains the title of the current game\r\n  const [gameDescription, setGameDescription] = useState('') //Contains the description of the current game\r\n  const [photo, setPhoto] = useState('') //Contains the photo of the current game\r\n  const [location, setLocation] = useState({\r\n    lat: 45.3875812,\r\n    lng: 75.69602019999999,\r\n  }) //Contains the location of the current game\r\n  const [time, setTime] = useState('') //Contains the time of the game set by the creator\r\n  const [winner, setWinner] = useState(null)\r\n\r\n  const [users, setUsers] = useState([]) //Contains all users inside the current game\r\n  const [inviteUsers, setInviteUsers] = useState([]) //Contains all users that can be invited to the current game\r\n  const [requests, setRequests] = useState([]) //Contains all requests to join the current game\r\n  const [role, setRole] = useState([]) //Contains the role of the current user\r\n  const [team1, setTeam1] = useState([]) //Contains all team1 information including name, photo and users\r\n  const [team2, setTeam2] = useState([]) //Contains all team2 information including name, photo and users\r\n  const [otherUsers, setOtherUsers] = useState([]) //Contains all users who are not part of any team\r\n\r\n  const [isUserInGroup, setIsUserInGroup] = useState(false) //Checks whether the current user is part of the game's group\r\n  const [isUserInGame, setIsUserInGame] = useState(false) //Checks whether the current user is part of the game\r\n  const [canUserMakeRequest, setCanUserMakeRequest] = useState(true) //Checks whether the current user can make a request to join the game\r\n\r\n  const [loading, setLoading] = useState(true) //Checks whether the game information is still loading\r\n\r\n  const [showGameSettings, setShowGameSettings] = useState(false) //Checks whether to show the game settings modal\r\n  const [showRequestModal, setShowRequestModal] = useState(false) //Checks whether to show the request to join game modal\r\n\r\n  //Set all game information that can be changed based on state\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/v1/games/getGameInfo/${props.match.params.id}`)\r\n      .then((res) => {\r\n        const gameData = res.data.data\r\n        const gameInfo = gameData.game\r\n        setGame(gameInfo)\r\n        setGameTitle(gameInfo.title)\r\n        setGameDescription(gameInfo.description)\r\n        let moment = require('moment')\r\n        const newTime = moment(gameInfo.time).format('dddd, MMMM Do, h:mm:ss a')\r\n        setTime(newTime)\r\n        setUsers(gameInfo.users)\r\n        setTeam1(gameInfo.team1)\r\n        setTeam2(gameInfo.team2)\r\n        setPhoto(gameInfo.photo)\r\n        setWinner(gameInfo.winner)\r\n        setRequests(gameInfo.requests)\r\n        setLocation({\r\n          lat: gameInfo.location.coordinates[0],\r\n          lng: gameInfo.location.coordinates[1],\r\n        })\r\n        setRole(gameData.role) //Set the role of the current logged in user\r\n        setOtherUsers(gameData.otherUsers) //Set the users who are not part of any team in the game\r\n        setInviteUsers(gameData.inviteUsers)\r\n        const user = gameData.user\r\n\r\n        //Check if user has already made a request to join the game\r\n        if (gameInfo.requests.some((request) => request.user === user._id)) {\r\n          setCanUserMakeRequest(false)\r\n        }\r\n\r\n        //Check if user is part of the group of the current game unless the game is open\r\n        if (!gameInfo.open) {\r\n          if (\r\n            user.groups.some(\r\n              (userGroups) => userGroups._id === gameInfo.group._id\r\n            )\r\n          ) {\r\n            setIsUserInGroup(true)\r\n          }\r\n        } else {\r\n          setIsUserInGroup(true)\r\n        }\r\n\r\n        //Check if user is already part of the current game\r\n        if (user.games.some((userGames) => userGames._id === gameInfo._id)) {\r\n          setCanUserMakeRequest(false)\r\n          setIsUserInGame(true)\r\n        }\r\n        setLoading(false)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err : ${err}`)\r\n      })\r\n  }, [game._id])\r\n\r\n  function addUser(newUserList) {\r\n    //Add user to the current user list (when request is accepted)\r\n    setUsers(newUserList)\r\n  }\r\n\r\n  function deleteRequest(id) {\r\n    //Remove the request from the request list\r\n    const newRequestList = requests.filter((request) => request._id !== id)\r\n    setRequests(newRequestList)\r\n  }\r\n\r\n  function removeUser(id) {\r\n    //Delete the user from the current user list\r\n    const newUserList = users.filter((user) => user._id !== id)\r\n    setUsers(newUserList)\r\n  }\r\n\r\n  function setTeam1Users(teamUsers) {\r\n    //Set the list of users for team1\r\n    setTeam1(teamUsers)\r\n  }\r\n\r\n  function setTeam2Users(teamUsers) {\r\n    //Set the list of users for team2\r\n    setTeam2(teamUsers)\r\n  }\r\n\r\n  function setNoTeamUsers(teamUsers) {\r\n    //Set the list of users who do not belong to any team\r\n    setOtherUsers(teamUsers)\r\n  }\r\n\r\n  function setGameWinner(winner) {\r\n    setWinner(winner)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    //Close the GameSettings modal\r\n    setShowGameSettings(false)\r\n  }\r\n\r\n  function onGameUpdate(title, description, photo, time) {\r\n    //Update the game information from the GameSettings modal\r\n    setGameTitle(title)\r\n    setGameDescription(description)\r\n    setPhoto(photo)\r\n    let moment = require('moment')\r\n    const newTime = moment(time).format('dddd, MMMM Do, h:mm:ss a')\r\n    setTime(newTime)\r\n  }\r\n\r\n  function onLocationChange(lat, lng) {\r\n    //Change the location of the current game\r\n    setLocation({ lat: lat, lng: lng })\r\n    const locationInfo = { location: { coordinates: [lat, lng] } }\r\n    axios.put(`/api/v1/games/${game._id}`, locationInfo)\r\n  }\r\n\r\n  function removeInviteUser(id) {\r\n    //Remove a user from the InviteUserList\r\n    const newInviteUsers = inviteUsers.filter((user) => user._id !== id)\r\n    setInviteUsers(newInviteUsers)\r\n  }\r\n\r\n  function onTeamUpdate(teamName, teamPhoto, team) {\r\n    //Update the information of a team from the TeamModal\r\n    if (team === 'team1') {\r\n      setTeam1({ ...team1, name: teamName, photo: teamPhoto })\r\n    }\r\n    if (team === 'team2') {\r\n      setTeam2({ ...team2, name: teamName, photo: teamPhoto })\r\n    }\r\n  }\r\n\r\n  function closeRequestModal() {\r\n    //Close the RequestModal\r\n    setShowRequestModal(false)\r\n  }\r\n\r\n  function makeRequest() {\r\n    //Check if the request to join game has been sent\r\n    setCanUserMakeRequest(false)\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.header}>\r\n        <Header />\r\n      </div>\r\n      {/* Map showing the game location*/}\r\n      <div className={classes.map}>\r\n        <GameMap\r\n          google={props.google}\r\n          center={{ lat: location.lat, lng: location.lng }}\r\n          height='300px'\r\n          zoom={15}\r\n          onLocationChange={onLocationChange}\r\n          role={role}\r\n          winner={winner}\r\n        />\r\n      </div>\r\n      {/* Div containing game information and list of users */}\r\n      <div className={classes.users}>\r\n        <div className={classes.info}>\r\n          {/* Div with game photo, title and group */}\r\n          <div className={classes.gameinfo}>\r\n            <Image\r\n              src={`${baseURL}/uploads/${photo}`}\r\n              className={classes.icon}\r\n            />\r\n            <p className={classes.title}>{gameTitle}</p>\r\n            {game.open ? null : (\r\n              <LinkContainer to={`/api/v1/groups/${game.group._id}`}>\r\n                <p className={classes.group}>Group: {game.group.name}</p>\r\n              </LinkContainer>\r\n            )}\r\n            <p className={classes.time}>{time}</p>\r\n            {/* Div with settings and request button */}\r\n            {!winner ? (\r\n              <div className={classes.settings}>\r\n                {!isUserInGroup ? (\r\n                  <Button\r\n                    variant='danger'\r\n                    style={{ borderRadius: '5px' }}\r\n                    disabled={true}\r\n                  >\r\n                    You are not part of this group\r\n                  </Button>\r\n                ) : null}\r\n                {canUserMakeRequest && isUserInGroup ? (\r\n                  <div>\r\n                    <Button\r\n                      style={{ borderRadius: '5px' }}\r\n                      variant='dark'\r\n                      onClick={() => setShowRequestModal(true)}\r\n                    >\r\n                      Request to join game\r\n                    </Button>\r\n                    <RequestModal\r\n                      modalType={'games'}\r\n                      modalId={game.id}\r\n                      showRequestModal={showRequestModal}\r\n                      closeRequestModal={closeRequestModal}\r\n                      makeRequest={makeRequest}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n                {!canUserMakeRequest && !isUserInGame && isUserInGroup ? (\r\n                  <div>\r\n                    <Button style={{ borderRadius: '5px' }} variant='success'>\r\n                      ✓ Request sent\r\n                    </Button>\r\n                  </div>\r\n                ) : null}\r\n                {role.includes('creator') ? (\r\n                  <div>\r\n                    <Button onClick={() => setShowGameSettings(true)}>\r\n                      Settings\r\n                    </Button>\r\n                    <GameSettings\r\n                      showGameSettings={showGameSettings}\r\n                      handleClose={handleClose}\r\n                      game={game}\r\n                      onGameUpdate={onGameUpdate}\r\n                      team1={team1}\r\n                      team2={team2}\r\n                      setGameWinner={setGameWinner}\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            ) : (\r\n              <Button className={classes.finished}>Game Finished!</Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <p>{gameDescription}</p>\r\n        {/* Tabs with users, requests and invites */}\r\n        <Tabs defaultActiveKey='users'>\r\n          <Tab eventKey='users' title='Users'>\r\n            <UserList\r\n              users={users}\r\n              model={'games'}\r\n              modelId={props.match.params.id}\r\n              removeUser={removeUser}\r\n              role={role}\r\n              winner={winner}\r\n            />\r\n          </Tab>\r\n          {role.includes('manageUsers') && !winner ? (\r\n            <Tab eventKey='requests' title='Requests'>\r\n              <RequestList\r\n                requests={requests}\r\n                requestType={'games'}\r\n                typeId={props.match.params.id}\r\n                deleteRequest={deleteRequest}\r\n                addUser={addUser}\r\n              />\r\n            </Tab>\r\n          ) : null}\r\n          {role.includes('inviteUsers') && !winner ? (\r\n            <Tab eventKey='invite' title='Invite Users'>\r\n              <InviteUserList\r\n                users={inviteUsers}\r\n                modelType='games'\r\n                modelId={props.match.params.id}\r\n                removeInviteUser={removeInviteUser}\r\n              />\r\n            </Tab>\r\n          ) : null}\r\n        </Tabs>\r\n      </div>\r\n      {/* List of teams with edit settings */}\r\n      {game.competitive ? (\r\n        <div className={classes.teams}>\r\n          <Card>\r\n            <TeamList\r\n              otherUsers={otherUsers}\r\n              team1={team1}\r\n              team2={team2}\r\n              winner={winner}\r\n              game={props.match.params.id}\r\n              setTeam1Users={setTeam1Users}\r\n              setTeam2Users={setTeam2Users}\r\n              setNoTeamUsers={setNoTeamUsers}\r\n              role={role}\r\n              onTeamUpdate={onTeamUpdate}\r\n            />\r\n          </Card>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(GameInfo)\r\n","import React from 'react'\r\n\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport LandingPage from './screens/LandingPage'\r\nimport Dashboard from './components/Dashboard'\r\nimport GroupInfo from './components/groups/GroupInfo'\r\nimport UserInfo from './components/users/UserInfo'\r\nimport GameInfo from './components/games/GameInfo'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Router>\r\n        <Container>\r\n          <Route path='/api/v1/groups/:id' component={GroupInfo} />\r\n          <Route path='/api/v1/games/:id' component={GameInfo} />\r\n          <Route path='/api/v1/users/:id' component={UserInfo} />\r\n          <Route path='/dashboard' component={Dashboard} />\r\n          <Route path='/' component={LandingPage} exact />\r\n        </Container>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usericon\":\"User_usericon__1NXZD\",\"user\":\"User_user__uJP9G\",\"userName\":\"User_userName__MUZo7\",\"stats\":\"User_stats__1qqu4\",\"delete\":\"User_delete__3B_Yy\",\"roleicon\":\"User_roleicon__1kUja\",\"deleteicon\":\"User_deleteicon__1uQam\",\"wins\":\"User_wins__13Hck\",\"container\":\"User_container__3snbK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mdbsearch\":\"Search_mdbsearch__1zNR4\",\"listgroup\":\"Search_listgroup__8R7YM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Request_container__2KHWC\",\"options\":\"Request_options__3igl3\",\"acceptIcon\":\"Request_acceptIcon__3OmJd\",\"denyIcon\":\"Request_denyIcon__2WCRg\",\"icon\":\"Request_icon__2QAYY\",\"name\":\"Request_name__2Acp9\",\"message\":\"Request_message__34eqw\",\"info\":\"Request_info__1gppt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itema\":\"Header_itema__3w4xP\",\"itemb\":\"Header_itemb__3q5LD\",\"itemc\":\"Header_itemc__2gmbk\",\"container\":\"Header_container__21fXJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Login_card__1VyBj\",\"button\":\"Login_button__2kPt4\",\"registerbutton\":\"Login_registerbutton___TMY2\"};"],"sourceRoot":""}